{"_id":"hubot-imessage","_rev":"3-3b6d60c3408fc8866e91a3362874ecde","name":"hubot-imessage","description":"An iMessage (and general AppleScript) adapter for hubot","dist-tags":{"latest":"0.0.1"},"versions":{"0.0.1":{"name":"hubot-imessage","version":"0.0.1","author":{"name":"Mike Walker","email":"michael@lazerwalker.com"},"keywords":["github hubot imessage applescript adapter"],"description":"An iMessage (and general AppleScript) adapter for hubot","licenses":[{"type":"MIT","url":"http://github.com/lazerwalker/hubot-imessage/raw/master/LICENSE"}],"main":"./src/imessage.coffee","repository":{"type":"git","url":"git://github.com/lazerwalker/hubot-imessage.git"},"dependencies":{"applescript":">=0.2.1","redis":">=0.7.2","hiredis":">=0.1.14","hubot":">=2.4.6"},"devDependencies":{"coffee-script":"latest"},"engines":{"node":">= 0.8.x"},"readme":"Hubot iMessage Adapter\n----------------------\n\nDescription\n===========\nThis is an adapter for Hubot that lets you communicate with Hubot via Apple iMessage.\n\n\nInstallation and Setup\n======================\nSince Apple doesn't (currently) offer an API for accessing the iMessage protocol,\nthe only way Hubot can use iMessage is by communicating with Messages.app\nthrough AppleScript. As such, using hubot-imessage requires Hubot to be running\non a machine with OS X 10.8 or newer.\n\nDownload the [latest version of Hubot](https://github.com/github/hubot/archive/master.zip)\n(more info at https://github.com/github/hubot). Extract it somewhere, and then\nadd both `hubot` and `hubot-imessage` to the dependency section of your `package.json`:\n\n    dependencies: {\n        // more dependencies here...\n        \"hubot\": \">=1.4.6\",\n        \"hubot-imessage\": \">=0.0.1\"\n    }\n\nYou likely also want to add the `hubot-scripts` package as well; see the regular\nHubot documentation for more info.\n\nRun `npm install` to properly install your dependencies.\n\n\n### Configure Messages.app\nAt this point, you've got a basic Hubot instance, but the Hubot iMessage adapter\nrequires some additional setup.\n\n1. You'll need to set up a secondary iMessage account for your Hubot. Sign up for a\nnew Apple ID at https://appleid.apple.com/cgi-bin/WebObjects/MyAppleId.woa/wa/createAppleId\nand sign in to it from your desktop Messages.app.\n\n2. Open `$HUBOT_PATH/node_modules/hubot-imessage/src/sendMessage.scpt` (here, and all\nother times `$HUBOT_PATH` is mentioned, replace it with the actual path to your Hubot\ninstance) in AppleScript Editor (located in `/Applications/Utilities`). On line 6,\n replace `$HUBOT_PATH` with the full path to your base Hubot dir.\n\n3. In order for Messages.app to properly route conversations to Hubot, it needs to\nbe set up to run a few AppleScripts in response to events. Open up Messages.app,\nthen its Preferences pane from the title menu. Go to the Alerts tab.\n\n4. Select the event \"Text Invitation\". Check the box for \"Run an AppleScript\",\nand select `Auto Accept.applescript` from the dropdown menu.\n\n5. Select the event \"Message Received\". Check the box for \"Run an AppleScript\".\nIn the selection dropdown, click \"Choose Script\". Find and select\n`messageReceived.scpt`, which is located in `$HUBOT_PATH/node_modules/hubot-imessage/src`\n(and which you should have already edited, as per the above section).\n\n6. Messages.app is now configured to accept iMessages from any user, but Hubot\nwill only repsond to commands sent from iMessage users in its whitelist.\nHubot reads in a comma-separated list of iMessage IDs from the environment\nvariable `HUBOT_IMESSAGE_HANDLES` to know who to trust. iMessage IDs typically\ntake the format of `+15551234` or `E:steve@mac.com`.\nYou can easily set this from your Terminal with something like:\n\n    export HUBOT_IMESSAGE_HANDLES=+15551234,E:steve@mac.com\n\n\nUsage\n=====\nRun Hubot with the following command:\n\n    $HUBOT_PATH/node_modules/.bin/hubot -a imessage\n\nI'd probably recommend creating an alias for it, or adding $HUBOT_PATH/node_modules/.bin\nto your $PATH.\n\nFrom there, you can treat it just as you would any normal Hubot instance with\nregards to installing custom scripts, etc.\n\n\nWarnings and Miscellanea\n========================\nTypically, you'd host a Hubot on Heroku or something similar; requiring OS X\nmakes that impossible. There are a few unfortunate snags I've found from running\nHubot / hubot-imessage on a consumer desktop OS:\n\n* Messages.app doesn't let you sign in to multiple iMessage accounts at the same\ntime. If you want to be able to send iMessages from your main account on your home\ncomputer, you may want to set up a second machine to act as a dedicated Hubot\nserver.\n\n* If your computer is in sleep mode, Hubot won't respond immediately. However,\nthe iMessages you send will queue up; when your computer comes awake, Hubot will\nprocess and respond to messages in the order in which they were received.\n\n* When using Hubot in a chat room setting, many commands require you to type\nHubot's name before the command. If you enter `help` to get a list of commands,\nmany will list the prefix, but you do NOT need to enter it.\n\n\nExtending\n=========\nAll iMessage-specific functionality for hubot-imessage lives in AppleScript\nscripts rather than the core CoffeeScript code, meaning it would be really easy\nto adapt to support any arbitrary AppleScript-based I/O flow.\n\nTo send incoming text to Hubot, just run the messageReceiver.coffee script\nwith three arguments: the user ID of the sender (any string, provided it's\nwhitelisted in the `HUBOT_IMESSAGE_HANDLES` env variable), the message to\nbe sent, and a friendly name for the sender. If Hubot is running, it will\nreceive the message.\n\nWhen Hubot is ready to send a message out to a user, it calls sendMessage.scpt\nwith two arguments: the user ID of the user (corresponding to the user ID passed\nin with a received message) and the message to send. You can easily replace that\nwith your own custom AppleScript that takes in those same arguments.\n\n\nContribute\n==========\nI gladly accept pull requests!\n\n\nLicense\n=======\n(c) Michael Walker\nLicensed under the MIT License. See LICENSE for more info.\n","_id":"hubot-imessage@0.0.1","dist":{"shasum":"3f8d1e29d7b6179cb20b178c5103660527905a6c","tarball":"https://registry.npmjs.org/hubot-imessage/-/hubot-imessage-0.0.1.tgz"},"maintainers":[{"name":"lazerwalker","email":"michael@lazerwalker.com"}],"directories":{}}},"readme":"Hubot iMessage Adapter\n----------------------\n\nDescription\n===========\nThis is an adapter for Hubot that lets you communicate with Hubot via Apple iMessage.\n\n\nInstallation and Setup\n======================\nSince Apple doesn't (currently) offer an API for accessing the iMessage protocol,\nthe only way Hubot can use iMessage is by communicating with Messages.app\nthrough AppleScript. As such, using hubot-imessage requires Hubot to be running\non a machine with OS X 10.8 or newer.\n\nDownload the [latest version of Hubot](https://github.com/github/hubot/archive/master.zip)\n(more info at https://github.com/github/hubot). Extract it somewhere, and then\nadd both `hubot` and `hubot-imessage` to the dependency section of your `package.json`:\n\n    dependencies: {\n        // more dependencies here...\n        \"hubot\": \">=1.4.6\",\n        \"hubot-imessage\": \">=0.0.1\"\n    }\n\nYou likely also want to add the `hubot-scripts` package as well; see the regular\nHubot documentation for more info.\n\nRun `npm install` to properly install your dependencies.\n\n\n### Configure Messages.app\nAt this point, you've got a basic Hubot instance, but the Hubot iMessage adapter\nrequires some additional setup.\n\n1. You'll need to set up a secondary iMessage account for your Hubot. Sign up for a\nnew Apple ID at https://appleid.apple.com/cgi-bin/WebObjects/MyAppleId.woa/wa/createAppleId\nand sign in to it from your desktop Messages.app.\n\n2. Open `$HUBOT_PATH/node_modules/hubot-imessage/src/sendMessage.scpt` (here, and all\nother times `$HUBOT_PATH` is mentioned, replace it with the actual path to your Hubot\ninstance) in AppleScript Editor (located in `/Applications/Utilities`). On line 6,\n replace `$HUBOT_PATH` with the full path to your base Hubot dir.\n\n3. In order for Messages.app to properly route conversations to Hubot, it needs to\nbe set up to run a few AppleScripts in response to events. Open up Messages.app,\nthen its Preferences pane from the title menu. Go to the Alerts tab.\n\n4. Select the event \"Text Invitation\". Check the box for \"Run an AppleScript\",\nand select `Auto Accept.applescript` from the dropdown menu.\n\n5. Select the event \"Message Received\". Check the box for \"Run an AppleScript\".\nIn the selection dropdown, click \"Choose Script\". Find and select\n`messageReceived.scpt`, which is located in `$HUBOT_PATH/node_modules/hubot-imessage/src`\n(and which you should have already edited, as per the above section).\n\n6. Messages.app is now configured to accept iMessages from any user, but Hubot\nwill only repsond to commands sent from iMessage users in its whitelist.\nHubot reads in a comma-separated list of iMessage IDs from the environment\nvariable `HUBOT_IMESSAGE_HANDLES` to know who to trust. iMessage IDs typically\ntake the format of `+15551234` or `E:steve@mac.com`.\nYou can easily set this from your Terminal with something like:\n\n    export HUBOT_IMESSAGE_HANDLES=+15551234,E:steve@mac.com\n\n\nUsage\n=====\nRun Hubot with the following command:\n\n    $HUBOT_PATH/node_modules/.bin/hubot -a imessage\n\nI'd probably recommend creating an alias for it, or adding $HUBOT_PATH/node_modules/.bin\nto your $PATH.\n\nFrom there, you can treat it just as you would any normal Hubot instance with\nregards to installing custom scripts, etc.\n\n\nWarnings and Miscellanea\n========================\nTypically, you'd host a Hubot on Heroku or something similar; requiring OS X\nmakes that impossible. There are a few unfortunate snags I've found from running\nHubot / hubot-imessage on a consumer desktop OS:\n\n* Messages.app doesn't let you sign in to multiple iMessage accounts at the same\ntime. If you want to be able to send iMessages from your main account on your home\ncomputer, you may want to set up a second machine to act as a dedicated Hubot\nserver.\n\n* If your computer is in sleep mode, Hubot won't respond immediately. However,\nthe iMessages you send will queue up; when your computer comes awake, Hubot will\nprocess and respond to messages in the order in which they were received.\n\n* When using Hubot in a chat room setting, many commands require you to type\nHubot's name before the command. If you enter `help` to get a list of commands,\nmany will list the prefix, but you do NOT need to enter it.\n\n\nExtending\n=========\nAll iMessage-specific functionality for hubot-imessage lives in AppleScript\nscripts rather than the core CoffeeScript code, meaning it would be really easy\nto adapt to support any arbitrary AppleScript-based I/O flow.\n\nTo send incoming text to Hubot, just run the messageReceiver.coffee script\nwith three arguments: the user ID of the sender (any string, provided it's\nwhitelisted in the `HUBOT_IMESSAGE_HANDLES` env variable), the message to\nbe sent, and a friendly name for the sender. If Hubot is running, it will\nreceive the message.\n\nWhen Hubot is ready to send a message out to a user, it calls sendMessage.scpt\nwith two arguments: the user ID of the user (corresponding to the user ID passed\nin with a received message) and the message to send. You can easily replace that\nwith your own custom AppleScript that takes in those same arguments.\n\n\nContribute\n==========\nI gladly accept pull requests!\n\n\nLicense\n=======\n(c) Michael Walker\nLicensed under the MIT License. See LICENSE for more info.\n","maintainers":[{"name":"lazerwalker","email":"michael@lazerwalker.com"}],"time":{"modified":"2013-02-23T05:58:19.201Z","created":"2013-02-23T05:58:14.278Z","0.0.1":"2013-02-23T05:58:19.201Z"},"author":{"name":"Mike Walker","email":"michael@lazerwalker.com"},"repository":{"type":"git","url":"git://github.com/lazerwalker/hubot-imessage.git"},"_attachments":{}}