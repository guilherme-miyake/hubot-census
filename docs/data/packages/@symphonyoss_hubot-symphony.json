{"_id":"@symphonyoss/hubot-symphony","_rev":"3-b5efb12abc2b8189ce123aface80df74","name":"@symphonyoss/hubot-symphony","description":"Hubot adapter for Symphony","dist-tags":{"latest":"1.0.0"},"versions":{"1.0.0":{"name":"@symphonyoss/hubot-symphony","description":"Hubot adapter for Symphony","main":"lib/adapter.js","scripts":{"precommit":"npm test","prepush":"npm test","build":"babel src -d lib","commitmsg":"validate-commit-msg","diagnostic":"babel-node src/diagnostic.js","flow":"flow","eslint":"eslint src/*.js test/*.js it/*.js","test":"mocha test/*.js","test-cov":"nyc npm test","it":"mocha it/*.js","generate-yarn-lockfile":"npm install -g yarn && npm install --production && yarn install","semantic-release":"semantic-release pre && npm publish --access public && semantic-release post"},"repository":{"type":"git","url":"git+https://github.com/symphonyoss/hubot-symphony.git"},"keywords":["symphonyoss","hubot","adapter","symphony"],"author":{"name":"Jon Freedman"},"license":"Apache-2.0","bugs":{"url":"https://github.com/symphonyoss/hubot-symphony/issues"},"homepage":"https://github.com/symphonyoss/hubot-symphony","dependencies":{"backoff":"2.5.0","html-entities":"1.2.0","log":"1.4.0","memoizee":"0.4.4","request":"2.81.0"},"devDependencies":{"babel-cli":"6.24.0","babel-eslint":"7.1.1","babel-plugin-transform-class-properties":"6.23.0","babel-plugin-transform-flow-strip-types":"6.22.0","babel-preset-env":"1.2.2","babel-preset-es2016":"6.22.0","babel-register":"6.24.0","chai":"3.5.0","codeclimate-test-reporter":"0.4.1","coffee-script":"1.12.4","coveralls":"2.12.0","cross-env":"3.2.4","cz-conventional-changelog":"2.0.0","eslint":"3.18.0","eslint-config-canonical":"8.0.2","eslint-config-google":"0.7.1","eslint-plugin-flowtype":"2.30.4","eslint-plugin-mocha":"4.9.0","flow-bin":"0.42.0","ghooks":"2.0.0","hubot":"2.19.0","husky":"0.13.2","mocha":"3.2.0","nock":"9.0.9","nyc":"10.1.2","semantic-release":"6.3.6","uuid":"3.0.1","validate-commit-msg":"2.11.2","yargs":"7.0.2"},"config":{"commitizen":{"path":"./node_modules/cz-conventional-changelog"},"ghooks":{"commit-msg":"validate-commit-msg"},"validate-commit-msg":{"helpMessage":"This repo is Commitizen friendly, commit using git cz or see https://github.com/stevemao/conventional-changelog-angular/blob/master/convention.md"}},"nyc":{"include":["src/*.js"],"exclude":["**/*-compiled.js","**/*-compiled.js.map"],"require":["babel-register"],"reporter":["lcov","text"],"sourceMap":true,"instrument":true},"version":"1.0.0","gitHead":"e7b506ad663819b282788240a0439a4777ea4f1f","_id":"@symphonyoss/hubot-symphony@1.0.0","_shasum":"e77e704cd6fbe7105ff197b2699f124aab6f505d","_from":".","_npmVersion":"4.2.0","_nodeVersion":"7.8.0","_npmUser":{"name":"jonfreedman","email":"jon.freedman@zoho.com"},"dist":{"shasum":"e77e704cd6fbe7105ff197b2699f124aab6f505d","tarball":"https://registry.npmjs.org/@symphonyoss/hubot-symphony/-/hubot-symphony-1.0.0.tgz"},"maintainers":[{"name":"jonfreedman","email":"jon.freedman@zoho.com"}],"_npmOperationalInternal":{"host":"packages-18-east.internal.npmjs.com","tmp":"tmp/hubot-symphony-1.0.0.tgz_1491845668473_0.6022637742571533"},"directories":{}}},"readme":"# hubot-symphony\n\n[Hubot](http://hubot.github.com/) adapter for [Symphony](https://symphony.com) developed by the [Symphony Foundation](http://symphony.foundation/)\n\nHubot is a [chatops](http://lmgtfy.com/?q=chatops+hubot) tool developed by GitHub, with this adapator you can get up and running with a programmable bot written in JavaScript/Coffescript [in a few minutes](http://blog.symphony.foundation/run-a-symphony-bot-in-less-than-three-minutes-on-docker).  This project wraps a small number of the Symphony REST APIs required for two-way bot communication and user lookup together with offline test cases, the adaptor is in use both by Symphony clients and by Symphony themselves.\n\n[![Symphony Software Foundation - Active](https://cdn.rawgit.com/symphonyoss/contrib-toolbox/master/images/ssf-badge-active.svg)](https://symphonyoss.atlassian.net/wiki/display/FM/Active)\n\n[![Build Status](https://travis-ci.org/symphonyoss/hubot-symphony.svg?branch=master)](https://travis-ci.org/symphonyoss/hubot-symphony)\n[![Coverage Status](https://coveralls.io/repos/github/symphonyoss/hubot-symphony/badge.svg?branch=master)](https://coveralls.io/github/symphonyoss/hubot-symphony)\n[![Code Climate](https://codeclimate.com/github/symphonyoss/hubot-symphony/badges/gpa.svg)](https://codeclimate.com/github/symphonyoss/hubot-symphony)\n[![Versioneye dependencies](https://www.versioneye.com/user/projects/58cfec3d6893fd003b3c36ce/badge.svg?style=flat-square)](https://www.versioneye.com/user/projects/58cfec3d6893fd003b3c36ce)\n[![bitHound Dependencies](https://www.bithound.io/github/symphonyoss/hubot-symphony/badges/dependencies.svg)](https://www.bithound.io/github/symphonyoss/hubot-symphony/master/dependencies/npm)\n[![bitHound Dev Dependencies](https://www.bithound.io/github/symphonyoss/hubot-symphony/badges/devDependencies.svg)](https://www.bithound.io/github/symphonyoss/hubot-symphony/master/dependencies/npm)\n[![NSP Status](https://nodesecurity.io/orgs/symphonyoss/projects/9309ce59-9a6b-43a9-b7bb-54c6f0117e0a/badge)](https://nodesecurity.io/orgs/symphonyoss/projects/9309ce59-9a6b-43a9-b7bb-54c6f0117e0a)\n\n[![semantic-release](https://img.shields.io/badge/%20%20%F0%9F%93%A6%F0%9F%9A%80-semantic--release-e10079.svg)](https://github.com/semantic-release/semantic-release)\n[![Commitizen friendly](https://img.shields.io/badge/commitizen-friendly-brightgreen.svg)](http://commitizen.github.io/cz-cli/)\n\n[![NPM](https://nodei.co/npm/hubot-symphony.png?downloads=true&stars=true)](https://nodei.co/npm/hubot-symphony/)\n\n## Usage\nYou must pass the following environment variables to hubot\n* `HUBOT_SYMPHONY_HOST` set to the url of your pod without the https:// prefix\n* `HUBOT_SYMPHONY_PUBLIC_KEY` set to the location of your bot account .pem public key file\n* `HUBOT_SYMPHONY_PRIVATE_KEY` set to the location of your bot account .pem private key file\n* `HUBOT_SYMPHONY_PASSPHRASE` set to the passphrase associated with your bot account private key\n\nThere are also optional arguments which should be used if you are running on-premise\n* `HUBOT_SYMPHONY_KM_HOST` set to the url of your key manager without the https:// prefix\n* `HUBOT_SYMPHONY_AGENT_HOST` set to the url of your agent without the https:// prefix\n* `HUBOT_SYMPHONY_SESSIONAUTH_HOST` set to the url of your session auth without the https:// prefix\n\nThese arguments are passed through to the NodeJs request module as described [here](https://github.com/request/request#tlsssl-protocol).\n\n### Non-standard messaging\n\nIf you want to send a rich message you can call send with an Object instead of a String:\n```\nmodule.exports = (robot) ->\n  robot.respond /pug me/i, (msg) ->\n    msg.http(\"http://pugme.herokuapp.com/random\")\n      .get() (err, res, body) ->\n        pug = JSON.parse(body).pug\n        msg.send pug\n        msg.send {\n          format: 'MESSAGEML'\n          text: \"<messageML><a href=\\\"#{pug}\\\"/></messageML>\"\n        }\n```\nThe various supported tags are documented [here](https://rest-api.symphony.com/docs/message-format).\n\nIf you want to send a direct message to a user in response to a webhook you can interact with the adaptor via the robot variable:\n```\nmodule.exports = (robot) ->\n  robot.router.post '/hubot/webhook', (req, res) ->\n    email = req.params.email\n    message = req.params.message\n    robot.adapter.sendDirectMessageToEmail(email, message)\n    res.send 'OK'\n```\n\n\n### Diagnostics\nA simple diagnostic script is included to help confirm that you have all the necessary pieces to get started.  You can run this as follows:\n\n```\ngit clone https://github.com/symphonyoss/hubot-symphony.git\ncd hubot-symphony\nnpm install\nnpm run diagnostic -- --publicKey [key1.pem] --privateKey [key2.pem] --passphrase [changeit] --host [host.symphony.com]\n```\n\nIf you are running on-premise you can add optional fifth / sixth / seventh arguments\n\n```\ngit clone https://github.com/symphonyoss/hubot-symphony.git\ncd hubot-symphony\nnpm install\nnpm run diagnostic -- --publicKey [key1.pem] --privateKey [key2.pem] --passphrase [changeit] --host [host.symphony.com] --kmhost [keymanager.host.com] --agenthost [agent.host.com] --sessionhost [session.host.com]\n```\n\nIf the script runs as expected it will obtain and log both session and key manager tokens, look up and log some details of the bot account and then create a datafeed and poll.  If you send a message using the Symphony client to the bot account you should see the details logged.\n\n### Contribute\n\nContributions are accepted via GitHub pull requests. All contributors must be covered by contributor license agreements to comply with the [Code Contribution Process](https://symphonyoss.atlassian.net/wiki/display/FM/Code+Contribution+Process).\n\n#### Note\nThe privateKey.pem and publicKey.pem files under test/resources have been generated at random and are not real keys.\n","maintainers":[],"time":{"modified":"2017-05-15T09:52:12.873Z","created":"2017-04-10T17:34:29.241Z","1.0.0":"2017-04-10T17:34:29.241Z"},"homepage":"https://github.com/symphonyoss/hubot-symphony","keywords":["symphonyoss","hubot","adapter","symphony"],"repository":{"type":"git","url":"git+https://github.com/symphonyoss/hubot-symphony.git"},"author":{"name":"Jon Freedman"},"bugs":{"url":"https://github.com/symphonyoss/hubot-symphony/issues"},"license":"Apache-2.0","readmeFilename":"README.md","_attachments":{}}