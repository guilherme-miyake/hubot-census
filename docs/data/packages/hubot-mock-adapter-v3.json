{"_id":"hubot-mock-adapter-v3","_rev":"2-0cead9589d82f5f1ef6c3f8ddeb5dcde","name":"hubot-mock-adapter-v3","description":"A mock Adapter for unit testing Hubot scripts","dist-tags":{"latest":"1.0.1"},"versions":{"1.0.0":{"name":"hubot-mock-adapter-v3","version":"1.0.0","description":"A mock Adapter for unit testing Hubot scripts","keywords":["hubot","jasmine"],"author":{"name":"Brian Lalor","email":"blalor@bravo5.org"},"repository":{"type":"git","url":"git+ssh://git@github.com/blalor/hubot-mock-adapter.git"},"main":"index.js","dependencies":{"hubot":">=2.5.4","lodash":"1.3.1"},"license":"WTFPL","gitHead":"1f4082dee00c43c66665d0f23f464d4749d7ece7","bugs":{"url":"https://github.com/blalor/hubot-mock-adapter/issues"},"homepage":"https://github.com/blalor/hubot-mock-adapter#readme","_id":"hubot-mock-adapter-v3@1.0.0","scripts":{},"_shasum":"09f483cdb5655ec8c2cb52717b78ed5329903268","_from":".","_npmVersion":"3.10.10","_nodeVersion":"6.9.5","_npmUser":{"name":"gr2m","email":"gregor@martynus.net"},"dist":{"shasum":"09f483cdb5655ec8c2cb52717b78ed5329903268","tarball":"https://registry.npmjs.org/hubot-mock-adapter-v3/-/hubot-mock-adapter-v3-1.0.0.tgz"},"maintainers":[{"name":"gr2m","email":"gregor@martynus.net"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/hubot-mock-adapter-v3-1.0.0.tgz_1497348731957_0.6116195598151535"},"directories":{}},"1.0.1":{"name":"hubot-mock-adapter-v3","version":"1.0.1","description":"A mock Adapter for unit testing Hubot scripts","keywords":["hubot","jasmine"],"author":{"name":"Brian Lalor","email":"blalor@bravo5.org"},"repository":{"type":"git","url":"git+ssh://git@github.com/blalor/hubot-mock-adapter.git"},"main":"index.js","dependencies":{"hubot":">=2.5.4","lodash":"1.3.1"},"license":"WTFPL","gitHead":"b669b3fb9f6355d3e635756673bbd573ee8b44b5","bugs":{"url":"https://github.com/blalor/hubot-mock-adapter/issues"},"homepage":"https://github.com/blalor/hubot-mock-adapter#readme","_id":"hubot-mock-adapter-v3@1.0.1","scripts":{},"_shasum":"19b59385b4a268e04583650a196c1ef724e4ba3b","_from":".","_npmVersion":"3.10.10","_nodeVersion":"6.9.5","_npmUser":{"name":"gr2m","email":"gregor@martynus.net"},"dist":{"shasum":"19b59385b4a268e04583650a196c1ef724e4ba3b","tarball":"https://registry.npmjs.org/hubot-mock-adapter-v3/-/hubot-mock-adapter-v3-1.0.1.tgz"},"maintainers":[{"name":"gr2m","email":"gregor@martynus.net"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/hubot-mock-adapter-v3-1.0.1.tgz_1497349099118_0.443449585698545"},"directories":{}}},"readme":"# mock adapter for unit-testing Hubot\n\nI've whacked together a couple of Hubot scripts, but then they started getting\nmore complicated.  TDD is really the ONLY way to do any kind of meaningful\ndevelopment.  But even if you're not TDD'ing, you *are* testing, right?\n_Right_?\n\nI couldn't find an existing method for writing unit tests for Hubot scripts.\nAfter digging around under Hubot's hood, I figured out all I really needed was\nan `Adapter` implementation I could spy on.  That is what you see here.\n\n## example usage\n\nLet's assume you've got a really simple script, like this:\n\n    module.exports = function(robot) {\n        robot.hear(/Computer!/, function(msg) {\n            msg.reply(\"Why hello there! (ticker tape, ticker tape)\");\n        });\n    };\n\nYou want to test this, of course.  So create a Mocha test:\n\n    var expect = require(\"chai\").expect;\n    var path   = require(\"path\");\n\n    var Hubot       = require(\"hubot\");\n    var Robot       = Hubot.Robot;\n    var TextMessage = Hubot.TextMessage;\n\n    describe(\"Eddie the shipboard computer\", function() {\n        var robot;\n        var user;\n        var adapter;\n\n        beforeEach(function(done) {\n            // create new robot, without http, using the mock adapter\n            robot = new Robot(null, \"mock-adapter\", false, \"Eddie\");\n\n            robot.adapter.on(\"connected\", function() {\n                // only load scripts we absolutely need, like auth.coffee\n                process.env.HUBOT_AUTH_ADMIN = \"1\";\n                robot.loadFile(\n                    path.resolve(\n                        path.join(\"node_modules/hubot/src/scripts\")\n                    ),\n                    \"auth.coffee\"\n                );\n\n                // load the module under test and configure it for the\n                // robot.  This is in place of external-scripts\n                require(\"../index\")(robot);\n\n                // create a user\n                user = robot.brain.userForId(\"1\", {\n                    name: \"mocha\",\n                    room: \"#mocha\"\n                });\n\n                adapter = robot.adapter;\n\n                done();\n            });\n\n            robot.run();\n        });\n\n        afterEach(function() {\n            robot.shutdown();\n        });\n\n        it(\"responds when greeted\", function(done) {\n            // here's where the magic happens!\n            adapter.on(\"reply\", function(envelope, strings) {\n                expect(strings[0]).match(/Why hello there/);\n\n                done();\n            });\n\n            adapter.receive(new TextMessage(user, \"Computer!\"));\n        });\n    });\n\nYou'll need `devDependencies` something like this in your `package.json`:\n\n    \"devDependencies\": {\n      \"coffee-script\": \"~1.6.3\",\n      \"chai\": \"~1.9.0\",\n      \"hubot-mock-adapter\": \"~1.0.0\",\n      \"mocha\": \"~1.17.1\",\n      \"hubot\": \"~2.7.2\",\n      \"sinon\": \"~1.9.0\"\n    }\n\n\nThat's (almost) all there is to it!\n\n## firing up Mocha\n\nAssuming you're using [`mocha`][mocha] to run your tests, and your\ntests are in `test/`, just run `node_modules/.bin/mocha --compilers coffee:coffee-script`.\nFor less typing, in your `package.json`, add a `test` script:\n\n    \"scripts\": {\n        \"test\": \"mocha --compilers coffee:coffee-script\"\n    }\n\nThen you can use `npm test` to run your tests!\n\n[mocha]: https://github.com/mhevery/jasmine-node\n","maintainers":[{"name":"gr2m","email":"gregor@martynus.net"}],"time":{"modified":"2017-06-13T10:18:20.089Z","created":"2017-06-13T10:12:12.952Z","1.0.0":"2017-06-13T10:12:12.952Z","1.0.1":"2017-06-13T10:18:20.089Z"},"homepage":"https://github.com/blalor/hubot-mock-adapter#readme","keywords":["hubot","jasmine"],"repository":{"type":"git","url":"git+ssh://git@github.com/blalor/hubot-mock-adapter.git"},"author":{"name":"Brian Lalor","email":"blalor@bravo5.org"},"bugs":{"url":"https://github.com/blalor/hubot-mock-adapter/issues"},"license":"WTFPL","readmeFilename":"README.md","_attachments":{}}