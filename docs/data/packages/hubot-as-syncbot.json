{"_id":"hubot-as-syncbot","_rev":"10-ab874da1fb0d96371807b8e2f1044e9d","name":"hubot-as-syncbot","description":"A sync bot for two services.","dist-tags":{"latest":"0.0.6"},"versions":{"0.0.2":{"name":"hubot-as-syncbot","version":"0.0.2","keywords":["hubot","sync","bot"],"description":"A sync bot for two services.","license":"Apache-2.0","dependencies":{"hubot":"^2.19.0","hubot-duplicate":"^0.1.1","hubot-flowdock-resin":"^0.7.13"},"scripts":{"start":"hubot -n \"$HUBOT_NAME\" -a \"$HUBOT_DUPLICATE_FROM\""},"_id":"hubot-as-syncbot@0.0.2","_shasum":"a9f44597fb97185a7908430bbebf28688e3392bc","_from":".","_npmVersion":"4.1.1","_nodeVersion":"6.9.4","_npmUser":{"name":"sqweelygig","email":"andrewl@resin.io"},"dist":{"shasum":"a9f44597fb97185a7908430bbebf28688e3392bc","tarball":"https://registry.npmjs.org/hubot-as-syncbot/-/hubot-as-syncbot-0.0.2.tgz"},"maintainers":[{"name":"sqweelygig","email":"andrewl@resin.io"}],"_npmOperationalInternal":{"host":"packages-18-east.internal.npmjs.com","tmp":"tmp/hubot-as-syncbot-0.0.2.tgz_1487776586663_0.7504854470025748"},"directories":{}},"0.0.4":{"name":"hubot-as-syncbot","version":"0.0.4","keywords":["hubot","sync","bot"],"description":"A sync bot for two services.","license":"Apache-2.0","dependencies":{"hubot":"^2.19.0","hubot-duplicate":"^0.1.3","hubot-flowdock-resin":"^0.7.15"},"scripts":{"start":"hubot -n \"$HUBOT_NAME\" -a \"$HUBOT_DUPLICATE_FROM\""},"_id":"hubot-as-syncbot@0.0.4","_shasum":"b8bd6e6e1539b4b6b37b9479c459e6976824b49a","_from":".","_npmVersion":"4.1.1","_nodeVersion":"6.9.4","_npmUser":{"name":"sqweelygig","email":"andrewl@resin.io"},"dist":{"shasum":"b8bd6e6e1539b4b6b37b9479c459e6976824b49a","tarball":"https://registry.npmjs.org/hubot-as-syncbot/-/hubot-as-syncbot-0.0.4.tgz"},"maintainers":[{"name":"sqweelygig","email":"andrewl@resin.io"}],"_npmOperationalInternal":{"host":"packages-12-west.internal.npmjs.com","tmp":"tmp/hubot-as-syncbot-0.0.4.tgz_1487776982556_0.4498647784348577"},"directories":{}},"0.0.5":{"name":"hubot-as-syncbot","version":"0.0.5","keywords":["hubot","sync","bot"],"description":"A sync bot for two services.","license":"Apache-2.0","dependencies":{"hubot":"^2.19.0","hubot-duplicate":"^0.1.3","hubot-flowdock-resin":"^0.7.16"},"scripts":{"start":"hubot -n \"$HUBOT_NAME\" -a \"$HUBOT_DUPLICATE_FROM\""},"_id":"hubot-as-syncbot@0.0.5","_shasum":"8401ea658e047e81c8639fa858f8b67482868596","_from":".","_npmVersion":"4.1.1","_nodeVersion":"6.9.4","_npmUser":{"name":"sqweelygig","email":"andrewl@resin.io"},"dist":{"shasum":"8401ea658e047e81c8639fa858f8b67482868596","tarball":"https://registry.npmjs.org/hubot-as-syncbot/-/hubot-as-syncbot-0.0.5.tgz"},"maintainers":[{"name":"sqweelygig","email":"andrewl@resin.io"}],"_npmOperationalInternal":{"host":"packages-12-west.internal.npmjs.com","tmp":"tmp/hubot-as-syncbot-0.0.5.tgz_1487780726516_0.9490262842737138"},"directories":{}},"0.0.6":{"name":"hubot-as-syncbot","version":"0.0.6","keywords":["hubot","sync","bot"],"description":"A sync bot for two services.","license":"Apache-2.0","dependencies":{"hubot":"^2.19.0","hubot-duplicate":"^0.1.3","hubot-flowdock-resin":"^0.7.16","hubot-front":"^0.0.6"},"scripts":{"start":"hubot -n \"$HUBOT_NAME\" -a \"$HUBOT_DUPLICATE_FROM\""},"_id":"hubot-as-syncbot@0.0.6","_shasum":"52fcca8278edd7125aed31f5631602e0ba4f316d","_from":".","_npmVersion":"4.1.1","_nodeVersion":"6.9.4","_npmUser":{"name":"sqweelygig","email":"andrewl@resin.io"},"dist":{"shasum":"52fcca8278edd7125aed31f5631602e0ba4f316d","tarball":"https://registry.npmjs.org/hubot-as-syncbot/-/hubot-as-syncbot-0.0.6.tgz"},"maintainers":[{"name":"sqweelygig","email":"andrewl@resin.io"}],"_npmOperationalInternal":{"host":"packages-18-east.internal.npmjs.com","tmp":"tmp/hubot-as-syncbot-0.0.6.tgz_1487861664991_0.23503631027415395"},"directories":{}}},"readme":"# Mebot\n\n## About\n\nWebot is a chat bot built on the Hubot framework. It was initially generated by\ngenerator-hubot.\n\nThis project is a tying together of a yo generated hubot and several published\npackages for the purpose of taking an individual's presence in one room and\nreplicating this onto a different service.\n\nIt was written by Andrew Lucas for resin.io's internal communication\nstreamlining.\n\n## License\n\n* Parts published by GitHub.\n* Parts authored by Andrew Lucas (sqweelygig), owned by resin.io, and published\n  under Apache-2.0.\n\n## Installation\n\n### Resin.io\n\n1. Get an app &amp; device\n    1. Create a new application in [https://resin.io](resin.io) targeted for\n       your hardware\n    2. Download ResinOS, flash and boot to make your IoT device cloud\n       manageable\n2. Set up environment\n    1. Read the Environment Variables section of this document\n    2. Use the Environment Variables page of your application or device\n3. Deploy the repo\n    1. `git clone https://github.com/resin-io/hubot-as-mebot` then `cd` into it\n    2. Add the remote using the provided command in the top right of resin.io\n    3. `git push resin` &amp; see the unicorn\n\n### Heroku\n\n1. Get an app\n    1. Visit heroku.com, get an account\n    2. Create a new app using the top right button\n2. Set up environment\n    1. Read the Environment Variables section of this document\n    2. Visit the settings tab of Heroku\n    2. Use the Config Variables section on Heroku to configure how you wish\n3. Fork the repo\n    1. This is optional if you have access to and trust an organisation that\n       has already forked this repo (eg resin.io)\n    2. Fork [hubot-as-mebot](https://github.com/resin-io/hubot-as-mebot)\n4. Link the repo\n    1. Visit the deploy Tab on Heroku\n    2. Enable Automatic deploys from the master branch\n5. Activate the worker\n    1. Visit the resources tab on Heroku\n    2. Edit the web Dyno so it is not running\n    3. Edit the worker Dyno so it is running\n6. Restart, just in case\n    1. My experience is that once this is all set up it's best to restart\n    2. Using the More dropdown (top right) restart all Dynos\n\n#### Deployment without Trust\n\nSo, you don't trust the repo maintainers and want to follow the principle of\nleast privilege. Good for you. You've got two easy options, either way you're\ngoing to have to take over the review and deploy yourself:\n* Create and maintain your own Fork in step (3). More work, more secure.\n* Leave deployment as manual in step (4). Less work, less secure.\n\n### Windows\n\n1. Get node.js\n    1. I use whatever the latest ^6.x is.\n    2. Plenty of guides exist for this, I'm not going to replicate or\n       recommend.\n2. Clone the repo\n    1. `git clone https://github.com/resin-io/hubot-as-mebot`\n3. Set up environment\n    1. Read the Environment Variables section of this document\n    2. I quite like using `SET` commands in a .bat file for this\n4. Run the code\n    1. `cd` into the code directory\n    2. `npm run windows`\n    3. I quite like using a `CALL` in the .bat file for this\n\n### Environment Variables\n\n* `HUBOT_ADAPTOR` - Always set to `flowdock-listen-to-self`. Sets up which\n  service to listen to. Runtime processes should force this.\n* `HUBOT_FLOWDOCK_API_TOKEN` - Personal API token from\n  [www.flowdock.com/account/tokens](https://www.flowdock.com/account/tokens).\n  eg `43542ab245098dade5098f12430bcdfa`.\n* `HUBOT_FLOWDOCK_LISTEN_TO_SELF` - Always set to `1`. This tells the adaptor\n  to listen to it's own account. This modifications made in\n  flowdock-attend-own-account. Runtime processes should force this.\n* `HUBOT_GITTER_API_TOKEN` - Personal Access Token from\n  [developer.gitter.im/apps](https://developer.gitter.im/apps). eg\n  `342d5aacbe45098ade243578de435fc425ad23ee`.\n* `HUBOT_GITTER_ROOM` - Name of the Gitter conversation to replicate to. eg\n  `resin-io/sandbox`. This defaults to `resin-io/public`.\n* `HUBOT_IGNORE_PREFIX` - Ignores lines based on a prefix. eg `:`. This\n  defaults to `Â£`.\n* `HUBOT_MONITOR_ROOM` - ID of the Flowdock flow to replicate from, currently\n  awkward to access.  The utility command 'monitor log' will put this to the\n  robot logger. eg `bed6fa5a-6a31-4a31-9b3b-9184b158c2b8` (r/sandbox). This defaults to\n  `3febc696-3aaf-4a83-9ddd-3a267abf4212` (public/chat).\n* `HUBOT_NAME` - Set to your own nickname in Flowdock. Tells Hubot what account\n  it is using. eg `sqweelygig`.\n\n## Program Flow\n\n1. Connect\n    1. because of `HUBOT_ADAPTOR` the `flowdock-listen-to-self` adaptor\n       connects to flowdock using the `HUBOT_FLOWDOCK_API_TOKEN` and lists the\n       channels it is joined to.  This pays attention to the account's output\n       because of `HUBOT_LISTEN_TO_SELF`.\n2. Receive\n    1. `flowdock-ignore-by-prefix` intercepts all comments and stops the\n       processing of any beginning with `HUBOT_IGNORE_PREFIX`.\n    2. `hubot-room-select` intercepts all comments and stops any that are\n       not from `HUBOT_MONITOR_ROOM` and `HUBOT_NAME` (this module seems to\n       have two purposes because it was coded to have monitor off|me|all, but\n       our use case configures it into one monitor me).\n3. Listen\n    1. `hubot-gitter-echo` hears all comments and echos them to\n       `HUBOT_GITTER_ROOM` using `HUBOT_GITTER_API_TOKEN`.\n    2. `hubot-rules` listens for \"what are the three rules\" and echoes Asimov's\n       three rules. In the project because it is a good debug script.\n","maintainers":[{"name":"sqweelygig","email":"andrewl@resin.io"}],"time":{"modified":"2017-02-23T14:54:33.823Z","created":"2017-02-22T15:16:27.283Z","0.0.2":"2017-02-22T15:16:27.283Z","0.0.4":"2017-02-22T15:23:04.271Z","0.0.5":"2017-02-22T16:25:28.562Z","0.0.6":"2017-02-23T14:54:25.536Z"},"keywords":["hubot","sync","bot"],"license":"Apache-2.0","readmeFilename":"readme.md"}
