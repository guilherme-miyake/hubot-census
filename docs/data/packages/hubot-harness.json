{"_id":"hubot-harness","name":"hubot-harness","dist-tags":{"latest":"1.0.0"},"versions":{"1.0.0":{"name":"hubot-harness","version":"1.0.0","description":"Test harness for Hubot script and plugin development","main":"lib/index.js","scripts":{"test":"mocha","lint":"prettier --check lib/**/*.js test/**/*.js","format":"prettier --write lib/**/*.js test/**/*.js"},"repository":{"type":"git","url":"git+https://github.com/smashwilson/hubot-harness.git"},"keywords":["hubot","test"],"author":{"name":"Ash Wilson","email":"smashwilson@gmail.com"},"license":"MIT","bugs":{"url":"https://github.com/smashwilson/hubot-harness/issues"},"homepage":"https://github.com/smashwilson/hubot-harness#readme","peerDependencies":{"hubot":"3.x"},"devDependencies":{"chai":"4.2.0","chai-as-promised":"7.1.1","hubot":"3.3.2","mocha":"^8.1.3","prettier":"^2.1.1"},"gitHead":"ac0bcfba12e88b71acc74dd80dbe029a86fc6ae4","_id":"hubot-harness@1.0.0","_nodeVersion":"13.5.0","_npmVersion":"6.14.8","dist":{"integrity":"sha512-MkRfYK0ab15e1VQLq3u17YYejvbA0QvM79kuIqk5q39V7f88gnIS26vUbaq743SJHDwLxsa5NNjETbdQHXc86Q==","shasum":"309803b0d30bcef4ca1874cd469bb3b63b3af42f","tarball":"https://registry.npmjs.org/hubot-harness/-/hubot-harness-1.0.0.tgz","fileCount":16,"unpackedSize":14670,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJfT8BbCRA9TVsSAnZWagAAhhgP/21s3+ZvZKO51ePH6A0k\nIw/inpxRoBQcEO47/iWEtrhx3vx2NAlfdnLBwqplM+yceH8uGhNI7Q88sKEf\n19pAoTQK2wYVsLNAnu7i2Elly4ad9I0ZvlKUFtn7petH35JcMfUtRWzZT3oS\nx6z1WTm8xwkS78vYQGF/NsyAB8jx1TPdJ3oh3fWkFxlEBd7QDuiShT/k4jex\nAACYbbS8wnZRP7LDTt/HHO0Z8NSDdyu05sQP4+cjgCPhiZSSLS1UKqJ5ESWm\nwwCjmFtX8dL9Lc++jFkL5cpKPZJHG3LaJ5M5rV9k120Ah+n7omg0n1fm2d1e\nogTnznSii5K03prw5iiGdVHLs6SACRlcRzOckNE10QAYkwAyK1sN+lSZUkkI\nC/jj2RqPv+YQaBRCVk9+KqTQqvXZVaYJnUYSBWEMcymaOEtXQ9MmBu255m9K\nM5u8E5s9/B8K20kZIWmrNr572L3AfnkIrnl0vrfWJSOVdoJNq3GmVosxz8ht\ndWnHARvc2WqnOYeiqMkKjzwR0dcm3Kk/J89cYPWJ4dcffbckus+/kN8AaFFa\nN/SIN8OHm+uqkI4+OStpGdU7RncxpceGJ1VYGXj7ZRvV8QeDy52Il4ahOoW4\nyg5ojWaQMKnA2qx3bVblAgbUSNkqyOUA75zIiJy99O1ssvi5nn7pXHLEJmLO\nNnDH\r\n=SHp3\r\n-----END PGP SIGNATURE-----\r\n"},"maintainers":[{"name":"smashwilson","email":"smashwilson@gmail.com"}],"_npmUser":{"name":"smashwilson","email":"smashwilson@gmail.com"},"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/hubot-harness_1.0.0_1599062106914_0.9993877117041188"},"_hasShrinkwrap":false}},"time":{"created":"2020-09-02T15:55:06.914Z","1.0.0":"2020-09-02T15:55:07.105Z","modified":"2020-09-02T15:55:11.325Z"},"maintainers":[{"name":"smashwilson","email":"smashwilson@gmail.com"}],"description":"Test harness for Hubot script and plugin development","homepage":"https://github.com/smashwilson/hubot-harness#readme","keywords":["hubot","test"],"repository":{"type":"git","url":"git+https://github.com/smashwilson/hubot-harness.git"},"author":{"name":"Ash Wilson","email":"smashwilson@gmail.com"},"bugs":{"url":"https://github.com/smashwilson/hubot-harness/issues"},"license":"MIT","readme":"# hubot-harness\n\n![npm](https://img.shields.io/npm/v/hubot-harness?style=plastic) | ![Node CI](https://github.com/smashwilson/hubot-adventure/workflows/Node%20CI/badge.svg)\n\nThis is a testing harness for Hubot scripts and packages that takes advantage of language features like async/await, with support for interactions across multiple rooms and users.\n\n## Installation\n\nHubot 3.x is a peer dependency, so your package will also need to depend on Hubot itself separately. If you're writing Hubot scripts, this is likely already the case.\n\n```\nnpm install --dev hubot-harness\n```\n\n## Use\n\nHere's an example using a [Mocha](https://mochajs.org/) test suite. Note that there isn't anything Mocha-specific in the test harness.\n\n```js\nconst {Harness} = require(\"hubot-harness\");\n\ndescribe(\"my command\", function () {\n  let hubot;\n\n  beforeEach(function () {\n    hubot = new Harness({name: \"the-bot\"});\n\n    // Use .load() to initialize this bot with the scripts you wish to test.\n    // Its arguments are combined with `path.resolve()`.\n    hubot.load(__dirname, \"../scripts/my-script\");\n  });\n\n  it(\"runs a command and waits for the response\", async function () {\n    hubot.say(\"the-bot: ping\");\n    await hubot.waitForResponse(\"PONG\");\n  });\n\n  it(\"can match responses with regular expressions\", async function () {\n    hubot.say(\"the-bot: do the thing\");\n    await hubot.waitForResponse(/the thing is complete/);\n  });\n\n  it(\"can say things as different users\", async function () {\n    hubot.createUser(\"id0\", \"user-zero\");\n    hubot.createUser(\"id1\", \"user-one\", {extra: true});\n\n    hubot.sayAs(\"id0\", \"can i do this\");\n    await hubot.waitForResponse(/no/);\n\n    hubot.sayAs(\"id1\", \"can i do this\");\n    await hubot.waitForResponse(/yes/);\n  });\n\n  it(\"can say and listen in different rooms\", async function () {\n    const room0 = hubot.createRoom(\"#zero\");\n    const room1 = hubot.createRoom(\"#one\");\n\n    room0.say(\"which room is this\");\n    await room0.waitForResponse(/#zero/);\n\n    room1.say(\"which room is this\");\n    await room1.waitForResponse(/#one/);\n  });\n});\n```\n","readmeFilename":"README.md"}