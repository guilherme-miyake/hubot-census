{"_id":"hubot-site-health-examine","_rev":"1-529c24155db363b18f3e906a78881014","name":"hubot-site-health-examine","time":{"modified":"2016-08-03T16:21:13.217Z","created":"2016-07-24T16:14:52.883Z","1.0.0":"2016-07-24T16:14:52.883Z","1.0.1":"2016-07-24T16:26:23.615Z","1.0.2":"2016-07-24T16:30:40.780Z","1.1.0":"2016-08-03T15:27:14.041Z","1.1.1":"2016-08-03T16:21:13.217Z"},"maintainers":[{"name":"sak39","email":"dnsn.isk@gmail.com"}],"dist-tags":{"latest":"1.1.1"},"description":"This module examines sites you want to check whether these are connected successfully.","readme":"# Hubot Site Health Examine\n====\n\n# Overview\n\n## Description\n- hubotに載せてあげてください。\n- 登録したurlの生死状態を監視し、想定したステータスコードと返却値が異なる時にエラーメッセージを発言します。\n- ボットを招待したチャネルに対してのみ、ボットは監視情報を発言します。\n\n## Features\n- hubot-site-health-examineで提供する機能は以下のとおり\n1. 監視したいサイトのURLリストのCRUD管理 -> CRUD, Commandsの項目を参照\n2. 監視したいサイトを走査する監視メソッドを実行(healthExamineイベントと、Doctorクラスのいずれかで実行可能) -> Usage, Examine Methodの項目を参照\n\n## Requirement\nCoffeeScript\n\n## Install\n1. `npm install --save hubot-site-health-examine`を実行する。(--saveはお好みで)\n2. `external-scripts.json`に`\"hubot-site-health-examine\"`を追記する。\n\n## Usage\n### モジュールを読み込む\n```coffeescript\n#監視したいサイトのリストを管理するクラス\nNurse = require('hubot-site-health-examine').Nurse\n\n#Doctorクラスを使って監視メソッドを実行する場合に追記\nDoctor = require('hubot-site-health-examine').Doctor\n```\n\n### 監視メソッドを実行するスクリプトを作成する\n\n#### 1. NurseのgetListメソッド\n- 登録した監視したいサイトのURLリストを取得する\n```coffeescript\n# Nurseインスタンスを生成(robotオブジェクトを渡す)\nnurse = new Nurse(robot)\n# getListメソッドでURLリストを取得\nlist = nurse.getList()\n```\n\n#### 2-1. healthExamineイベントを使った方法\n- `robot.emit 'healthExamine', list, flags, msg`\n- この方法では、渡したflagsの内容に従って、イベント内部であらかじめ設定された発言を行う。\n\n##### 引数\n- list : 監視対象のリスト\n- flags : 発言したい内容の選択([1,0,1]のようにして指定) 0:無効, 1:有効\n  - 1桁目: エラー時に発言\n  - 2桁目: 想定したstatusCodeと実際のstatusCodeが一致した場合に発言\n  - 3桁目: 想定したstatusCodeと実際のstatusCodeが不一致の場合に発言\n- msg : `robot.hear`でコールバックに渡された引数。発言処理に必要(`msg.send`)。\n\n##### サンプルコード\n```coffeescript\nrobot.hear /she examine e/i, (msg) ->\n  nurse = new Nurse(robot)\n  ###出力内容の選定###\n  ###1st: error, 2nd: success, 3rd: fault###\n  flags = [1,1,1] #すべての場合で発言\n  list = nurse.getList()\n  robot.emit 'healthExamine', list, flags, msg\n```\n\n#### 2-2. Doctorクラスを使った方法\n- `doctor.examine list, examineCallback, msg`\n- この方法では、doctor.examineメソッドが戻り値として検査内容のオブジェクトを返す。\n\n##### 引数\n- list : 監視対象のリスト\n- examineCallback : 走査終了後に処理したいメソッド。ここで発言処理などを行う。\n- msg : `robot.hear`でコールバックに渡された引数。発言処理に必要(`msg.send`)。\n\n##### 戻り値\n- examineメソッド実行後に以下の形の戻り値がresultに渡される\n```javascript\n# コネクションエラーの場合\nmessage = {\n  \"status\": \"error\",\n  \"statusCode\": null,\n  \"discription\": \"ERROR: \\\"\" + site.url + \"\\\" Connection fail.\"\n};\n\n# 想定値と実際値が一致した場合\nmessage = {\n  \"status\": \"matched\",\n  \"statusCode\": \"\" + res.statusCode,\n  \"discription\": \"SUCCESS: \\\"\" + site.url + \"\\\" has been alive :)\"\n};\n\n# 想定値と実際値が不一致の場合\nmessage = {\n  \"status\": \"unmatched\",\n  \"statusCode\": \"\" + res.statusCode,\n  \"discription\": \"ERROR: \\\"\" + site.url + \"\\\" [expect]: \\\"\" + site.status + \"\\\", [actual]: \\\"\" + res.statusCode + \"\\\"\"\n};\n```\n\n##### サンプルコード\n```coffeescript\nrobot.hear /she examine d/i, (msg) ->\n  doctor = new Doctor()\n  nurse = new Nurse(robot)\n  data = nurse.getList()\n  doctor.examine data, examineCallback, msg\n\n### callback ###\nexamineCallback = (result, msg) ->\n  if result.status is \"error\"\n  msg.send \"#{result.discription}\"\n  else if result.status is \"matched\"\n  msg.send \"#{result.discription}\"\n  else if result.status is \"unmatched\"\n  msg.send \"#{result.discription}\"\n```\n\n### CRUD管理\n- 以下の形式で監視したいサイトのURLを登録する\n- SITE_URL: http(s)://から記述する。String型。\n- STATUS_CODE: Number型(200,404,503..etc)。\n```\ndata = [\n  {\"url\": \"SITE_URL\", \"status\": STATUS_CODE},\n  {\"url\": \"SITE_URL\", \"status\": STATUS_CODE},\n  {\"url\": \"SITE_URL\", \"status\": STATUS_CODE}\n];\n```\n\n## Commands\n\n#### []:省略可能, <>:引数\n- [BOT_NAME] she add \\<URL:string\\> \\<STATUS_CODE:int\\> : 検査するサイトを登録\n- [BOT_NAME] she list : 登録されたサイトをインデックス付きで表示\n- [BOT_NAME] she update \\<INDEX:int\\> \\<NEW_STATUS_CODE:int\\> : 登録されたサイトのインデックスと新しいステータスを指定して更新\n- [BOT_NAME] she remove \\<INDEX:int\\> : 登録されたサイトをインデックスを指定して削除\n\n### サンプルコマンド\n- [BOT_NAME] she examine with event : eventを使って監視メソッドを実行\n- [BOT_NAME] she examine with doctor : Doctorクラスを使って監視メソッドを実行\n\n## Licence\n\n[MIT](https://github.com/sak39)\n\n## Author\n\n[sak39](https://github.com/sak39)\n","versions":{"1.0.1":{"name":"hubot-site-health-examine","version":"1.0.1","description":"This module examines sites you want to check whether these are connected successfully.","main":"index.coffee","directories":{"test":"test"},"dependencies":{"lodash":"^4.13.1","request":"^2.72.0"},"scripts":{"test":"script/test"},"repository":{"type":"git","url":"git+https://github.com/l2tporg/hubot-site-health-examine.git"},"keywords":["hubot","site","health","examine","check","alive"],"author":{"name":"sak39"},"license":"MIT","bugs":{"url":"https://github.com/l2tporg/hubot-site-health-examine/issues"},"homepage":"https://github.com/l2tporg/hubot-site-health-examine#readme","_id":"hubot-site-health-examine@1.0.1","_shasum":"30682f7e82cbff2df6dbcd9062e5a17b13d0dc7d","_from":".","_npmVersion":"3.9.1","_nodeVersion":"6.1.0","_npmUser":{"name":"sak39","email":"dnsn.isk@gmail.com"},"dist":{"shasum":"30682f7e82cbff2df6dbcd9062e5a17b13d0dc7d","tarball":"http://registry.npmjs.org/hubot-site-health-examine/-/hubot-site-health-examine-1.0.1.tgz"},"maintainers":[{"name":"sak39","email":"dnsn.isk@gmail.com"}],"_npmOperationalInternal":{"host":"packages-12-west.internal.npmjs.com","tmp":"tmp/hubot-site-health-examine-1.0.1.tgz_1469377583367_0.8248657702933997"}},"1.0.2":{"name":"hubot-site-health-examine","version":"1.0.2","description":"This module examines sites you want to check whether these are connected successfully.","main":"index.coffee","directories":{"test":"test"},"dependencies":{"lodash":"^4.13.1","request":"^2.72.0"},"scripts":{"test":"script/test"},"repository":{"type":"git","url":"git+https://github.com/l2tporg/hubot-site-health-examine.git"},"keywords":["hubot","site","health","examine","check","alive"],"author":{"name":"sak39"},"license":"MIT","bugs":{"url":"https://github.com/l2tporg/hubot-site-health-examine/issues"},"homepage":"https://github.com/l2tporg/hubot-site-health-examine#readme","_id":"hubot-site-health-examine@1.0.2","_shasum":"e88caea4e28d7a810723cc79c2c1cb6db03277c1","_from":".","_npmVersion":"3.9.1","_nodeVersion":"6.1.0","_npmUser":{"name":"sak39","email":"dnsn.isk@gmail.com"},"dist":{"shasum":"e88caea4e28d7a810723cc79c2c1cb6db03277c1","tarball":"http://registry.npmjs.org/hubot-site-health-examine/-/hubot-site-health-examine-1.0.2.tgz"},"maintainers":[{"name":"sak39","email":"dnsn.isk@gmail.com"}],"_npmOperationalInternal":{"host":"packages-16-east.internal.npmjs.com","tmp":"tmp/hubot-site-health-examine-1.0.2.tgz_1469377837413_0.299684408120811"}},"1.1.0":{"name":"hubot-site-health-examine","version":"1.1.0","description":"This module examines sites you want to check whether these are connected successfully.","main":"index.js","directories":{"test":"test"},"dependencies":{"async":"^2.0.1","lodash":"^4.13.1","request":"^2.72.0"},"scripts":{"test":"script/test"},"repository":{"type":"git","url":"git+https://github.com/l2tporg/hubot-site-health-examine.git"},"keywords":["hubot","site","health","examine","check","alive"],"author":{"name":"sak39"},"license":"MIT","bugs":{"url":"https://github.com/l2tporg/hubot-site-health-examine/issues"},"homepage":"https://github.com/l2tporg/hubot-site-health-examine#readme","gitHead":"1ceec7aa6b6754a450a4c21ea7c52dffc0746cbf","_id":"hubot-site-health-examine@1.1.0","_shasum":"9092198811e9134634166d5dba688789669d3c3b","_from":".","_npmVersion":"3.9.1","_nodeVersion":"6.1.0","_npmUser":{"name":"sak39","email":"dnsn.isk@gmail.com"},"dist":{"shasum":"9092198811e9134634166d5dba688789669d3c3b","tarball":"http://registry.npmjs.org/hubot-site-health-examine/-/hubot-site-health-examine-1.1.0.tgz"},"maintainers":[{"name":"sak39","email":"dnsn.isk@gmail.com"}],"_npmOperationalInternal":{"host":"packages-16-east.internal.npmjs.com","tmp":"tmp/hubot-site-health-examine-1.1.0.tgz_1470238031656_0.9140561129897833"}},"1.1.1":{"name":"hubot-site-health-examine","version":"1.1.1","description":"This module examines sites you want to check whether these are connected successfully.","main":"index.js","directories":{"test":"test"},"dependencies":{"async":"^2.0.1","lodash":"^4.13.1","request":"^2.72.0"},"scripts":{"test":"script/test"},"repository":{"type":"git","url":"git+https://github.com/l2tporg/hubot-site-health-examine.git"},"keywords":["hubot","site","health","examine","check","alive"],"author":{"name":"sak39"},"license":"MIT","bugs":{"url":"https://github.com/l2tporg/hubot-site-health-examine/issues"},"homepage":"https://github.com/l2tporg/hubot-site-health-examine#readme","gitHead":"bc209e149962c2110af8edb20bd907cd45bf3384","_id":"hubot-site-health-examine@1.1.1","_shasum":"6d83b9062574d7972a7c9dc809f0ffb3adedc122","_from":".","_npmVersion":"3.9.1","_nodeVersion":"6.1.0","_npmUser":{"name":"sak39","email":"dnsn.isk@gmail.com"},"dist":{"shasum":"6d83b9062574d7972a7c9dc809f0ffb3adedc122","tarball":"http://registry.npmjs.org/hubot-site-health-examine/-/hubot-site-health-examine-1.1.1.tgz"},"maintainers":[{"name":"sak39","email":"dnsn.isk@gmail.com"}],"_npmOperationalInternal":{"host":"packages-12-west.internal.npmjs.com","tmp":"tmp/hubot-site-health-examine-1.1.1.tgz_1470241272980_0.85670085856691"}}},"homepage":"https://github.com/l2tporg/hubot-site-health-examine#readme","keywords":["hubot","site","health","examine","check","alive"],"repository":{"type":"git","url":"git+https://github.com/l2tporg/hubot-site-health-examine.git"},"author":{"name":"sak39"},"bugs":{"url":"https://github.com/l2tporg/hubot-site-health-examine/issues"},"license":"MIT","readmeFilename":"README.md"}
