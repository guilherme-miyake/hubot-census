{"_id":"hubot-ecs","_rev":"1-114b49313bf86cfba7de3d6beaca0ad6","name":"hubot-ecs","description":"A hubot script for manage AWS ECS cluster by ecs-cli.","dist-tags":{"latest":"1.0.0"},"versions":{"1.0.0":{"name":"hubot-ecs","version":"1.0.0","description":"A hubot script for manage AWS ECS cluster by ecs-cli.","main":"index.coffee","scripts":{"test":"echo \"Error: no test specified\" && exit 1"},"repository":{"type":"git","url":"git+https://github.com/mlf4aiur/hubot-ecs.git"},"keywords":["ecs","hubot"],"author":{"name":"Kevin Li"},"license":"BSD-3-Clause","bugs":{"url":"https://github.com/mlf4aiur/hubot-ecs/issues"},"homepage":"https://github.com/mlf4aiur/hubot-ecs#readme","gitHead":"46dc57879f8b71c874cd3e6506da46c901af6e6f","_id":"hubot-ecs@1.0.0","_shasum":"f6cef3a3fcdba7844bba0ad8b57c3e471279938a","_from":".","_npmVersion":"3.9.3","_nodeVersion":"4.3.0","_npmUser":{"name":"mlf4aiur","email":"mlf4aiur@gmail.com"},"dist":{"shasum":"f6cef3a3fcdba7844bba0ad8b57c3e471279938a","tarball":"https://registry.npmjs.org/hubot-ecs/-/hubot-ecs-1.0.0.tgz"},"maintainers":[{"name":"mlf4aiur","email":"mlf4aiur@gmail.com"}],"_npmOperationalInternal":{"host":"packages-12-west.internal.npmjs.com","tmp":"tmp/hubot-ecs-1.0.0.tgz_1465269026741_0.6234644919168204"},"directories":{}}},"readme":"hubot-ecs\n=========\n\nA hubot script for manage AWS ECS cluster via ecs-cli.\n\nInstallation\n------------\n\nIn hubot project repo, run:\n\n    npm install hubot-ecs --save\n\nThen add **hubot-ecs** to your `external-scripts.json`:\n\n```json\n[\n  \"hubot-ecs\"\n]\n```\n\nConfiguration\n-------------\n\nhubot-ecs can use [`hubot-auth`](https://github.com/hubot-scripts/hubot-auth) for restrict usage to certain roles.\n\nUsage\n-----\n\n* hubot ecs list-cluster - Lists all of the ECS clusters.\n* hubot ecs <cluster name> list-project - Lists all of the ECS projects in your cluster.\n* hubot ecs <cluster name> ps - Lists all of the running containers in default ECS cluster.\n* hubot ecs <cluster name> <project name> compose service ps - Lists all the containers in your cluster that belong to the service created with the compose project.\n* hubot ecs <cluster name> <project name> compose service up - Creates an ECS service from your compose file (if it does not already exist) and runs one instance of that task on your cluster (a combination of create and start). This command updates the desired count of the service to 1.\n* hubot ecs <cluster name> <project name> list-image - Lists all the images in your cluster that belong to the service created with the compose project.\n* hubot ecs <cluster name> <project name> update-image <new image> - Updates your compose file with the new image.\n\nExample\n-------\n\n    hubot> @hubot ecs list-cluster\n\n    hubot> Clusters:\n    hubot>   default\n\n    hubot> @hubot ecs default list-project\n    hubot>   example\n\n    hubot> @hubot @user has default_admin role\n    hubot>   OK, user has the 'default_admin' role.\n\nConfiguration\n-------------\n\nThe ECS cluster default path is `hubot_dir/node_modules/hubot-ecs/src/ecs/`, you can override this path by set environment variable `HUBOT_ECS_CLUSTER_PATH`, and use cluster name as the directory name, then put your [Docker Compose](https://docs.docker.com/compose/) file into `HUBOT_ECS_CLUSTER_PATH/<cluster-name>`, Docker compose name as the ECS project name, the default authorized roles are `admin` and `ecs_admin`, and you can use environment variable `HUBOT_ECS_AUTHORIZED_ROLES` to override it.\n\nRunning hubot-ecs on Docker\n---------------------------\n\n    export HUBOT_AUTH_ADMIN=slack_user_id_1,slack_user_id_2\n    export HUBOT_SLACK_TOKEN=slack_token\n    export HUBOT_ECS_AUTHORIZED_ROLES=admin,ecs_admin\n    export HUBOT_ECS_CLUSTER_PATH=/root/mybot/ecs\n\n    docker rm -f redis_hubot_ecs &>/dev/null\n    docker run \\\n        -d \\\n        --name redis_hubot_ecs \\\n        --restart=unless-stopped \\\n        -v \"$(pwd)/data\":/data:rw \\\n        redis:3.2.0-alpine \\\n        redis-server --appendonly yes\n\n    docker rm -f hubot_ecs &>/dev/null\n    docker run \\\n        -d \\\n        --name=hubot_ecs \\\n        --restart=unless-stopped \\\n        -e \"HUBOT_AUTH_ADMIN=${HUBOT_AUTH_ADMIN}\" \\\n        -e \"REDIS_PORT=tcp://redis:6379\" \\\n        -e \"HUBOT_SLACK_TOKEN=${HUBOT_SLACK_TOKEN}\" \\\n        -e \"HUBOT_ECS_AUTHORIZED_ROLES=${HUBOT_ECS_AUTHORIZED_ROLES}\" \\\n        -e \"HUBOT_ECS_CLUSTER_PATH=${HUBOT_ECS_CLUSTER_PATH}\" \\\n        -v \"${HOME}/.ecs/cluster\":/root/mybot/ecs:rw \\\n        -v \"${HOME}/.ecs/config\":/root/.ecs/config:ro \\\n        --link redis_hubot_ecs:redis \\\n        mlf4aiur/hubot-ecs\n\nLicense\n-------\n\nThis project is [BSD-3-Clause Licensed](https://github.com/mlf4aiur/hubot-ecs/master/LICENSE).\n","maintainers":[{"name":"mlf4aiur","email":"mlf4aiur@gmail.com"}],"time":{"modified":"2016-06-07T03:10:27.264Z","created":"2016-06-07T03:10:27.264Z","1.0.0":"2016-06-07T03:10:27.264Z"},"homepage":"https://github.com/mlf4aiur/hubot-ecs#readme","keywords":["ecs","hubot"],"repository":{"type":"git","url":"git+https://github.com/mlf4aiur/hubot-ecs.git"},"author":{"name":"Kevin Li"},"bugs":{"url":"https://github.com/mlf4aiur/hubot-ecs/issues"},"license":"BSD-3-Clause","readmeFilename":"README.md","_attachments":{}}