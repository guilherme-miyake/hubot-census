{"_id":"hubot-fb-platform","_rev":"3-d63fa50bb6ced96d71f732ed8013627a","name":"hubot-fb-platform","description":"A Hubot adapter for Facebook Messenger","dist-tags":{"latest":"5.0.2"},"versions":{"5.0.0":{"name":"hubot-fb-platform","version":"5.0.0","description":"A Hubot adapter for Facebook Messenger","keywords":["facebook messenger","hubot","hubot-scripts","hubot-adapters"],"homepage":"https://github.com/DKByo/hubot-fb-platform","bugs":{"url":"https://github.com/DKByo/hubot-fb-platform/issues"},"author":{"name":"Chen Ye","email":"cye@brown.edu","url":"cye.me"},"contributors":[{"name":"Danyel Cabello","email":"danyel.nerv@gmail.com","url":"http://codecaster.net"}],"main":"src/fb.coffee","scripts":{"test":"echo \"Error: no test specified\" && exit 1"},"repository":{"type":"git","url":"git+https://github.com/DKByo/hubot-fb-platform.git"},"license":"ISC","dependencies":{"mime":"^1.3.4","parent-require":"^1.0.0"},"peerDependencies":{"hubot":">=2.0"},"devDependencies":{"coffee-script":">=1.2.0"},"gitHead":"bf973bf87a09c7424553b36014eee75d0e3e8f43","_id":"hubot-fb-platform@5.0.0","_shasum":"16de013b51124f3e79b81578094b3cc1f176ab2d","_from":".","_npmVersion":"3.8.3","_nodeVersion":"5.10.1","_npmUser":{"name":"danyelk","email":"danyel.nerv@gmail.com"},"dist":{"shasum":"16de013b51124f3e79b81578094b3cc1f176ab2d","tarball":"http://registry.npmjs.org/hubot-fb-platform/-/hubot-fb-platform-5.0.0.tgz"},"maintainers":[{"name":"danyelk","email":"danyel.nerv@gmail.com"}],"_npmOperationalInternal":{"host":"packages-18-east.internal.npmjs.com","tmp":"tmp/hubot-fb-platform-5.0.0.tgz_1480106068930_0.61428640387021"}},"5.0.1":{"name":"hubot-fb-platform","version":"5.0.1","description":"A Hubot adapter for Facebook Messenger","keywords":["facebook messenger","hubot","hubot-scripts","hubot-adapters"],"homepage":"https://github.com/DKByo/hubot-fb-platform","bugs":{"url":"https://github.com/DKByo/hubot-fb-platform/issues"},"author":{"name":"Chen Ye","email":"cye@brown.edu","url":"cye.me"},"contributors":[{"name":"Danyel Cabello","email":"danyel.nerv@gmail.com","url":"http://codecaster.net"}],"main":"src/fb.coffee","scripts":{"test":"echo \"Error: no test specified\" && exit 1"},"repository":{"type":"git","url":"git+https://github.com/DKByo/hubot-fb-platform.git"},"license":"ISC","dependencies":{"mime":"^1.3.4","parent-require":"^1.0.0"},"peerDependencies":{"hubot":">=2.0"},"devDependencies":{"coffee-script":">=1.2.0"},"gitHead":"fc114cf82a0491e07ad5946cd1765bac4ea16676","_id":"hubot-fb-platform@5.0.1","_shasum":"d802b1c48e06216892bdf8a9f68afa237ef438f3","_from":".","_npmVersion":"3.8.3","_nodeVersion":"5.10.1","_npmUser":{"name":"danyelk","email":"danyel.nerv@gmail.com"},"dist":{"shasum":"d802b1c48e06216892bdf8a9f68afa237ef438f3","tarball":"https://registry.npmjs.org/hubot-fb-platform/-/hubot-fb-platform-5.0.1.tgz"},"maintainers":[{"name":"danyelk","email":"danyel.nerv@gmail.com"}],"_npmOperationalInternal":{"host":"packages-18-east.internal.npmjs.com","tmp":"tmp/hubot-fb-platform-5.0.1.tgz_1494025975338_0.8589849965646863"}},"5.0.2":{"name":"hubot-fb-platform","version":"5.0.2","description":"A Hubot adapter for Facebook Messenger","keywords":["facebook messenger","hubot","hubot-scripts","hubot-adapters"],"homepage":"https://github.com/DKByo/hubot-fb-platform","bugs":{"url":"https://github.com/DKByo/hubot-fb-platform/issues"},"author":{"name":"Chen Ye","email":"cye@brown.edu","url":"cye.me"},"contributors":[{"name":"Danyel Cabello","email":"danyel.nerv@gmail.com","url":"http://codecaster.net"}],"main":"src/fb.coffee","scripts":{"test":"echo \"Error: no test specified\" && exit 1"},"repository":{"type":"git","url":"git+https://github.com/DKByo/hubot-fb-platform.git"},"license":"ISC","dependencies":{"mime":"^1.3.4","parent-require":"^1.0.0"},"peerDependencies":{"hubot":">=2.0"},"devDependencies":{"coffee-script":">=1.2.0"},"gitHead":"fc114cf82a0491e07ad5946cd1765bac4ea16676","_id":"hubot-fb-platform@5.0.2","_shasum":"18ec7df9196e6fe7155db61e5c0cd97e4d446745","_from":".","_npmVersion":"3.8.3","_nodeVersion":"5.10.1","_npmUser":{"name":"danyelk","email":"danyel.nerv@gmail.com"},"dist":{"shasum":"18ec7df9196e6fe7155db61e5c0cd97e4d446745","tarball":"https://registry.npmjs.org/hubot-fb-platform/-/hubot-fb-platform-5.0.2.tgz"},"maintainers":[{"name":"danyelk","email":"danyel.nerv@gmail.com"}],"_npmOperationalInternal":{"host":"packages-18-east.internal.npmjs.com","tmp":"tmp/hubot-fb-platform-5.0.2.tgz_1494026528784_0.3952057536225766"}}},"readme":"# hubot-fb-platform\n\n[![NPM Version](https://badge.fury.io/js/hubot-fb.svg)](https://badge.fury.io/js/hubot-fb-platform)\n[![Dependency Status](https://david-dm.org/DKByo/hubot-fb.svg)](https://david-dm.org/DKByo/hubot-fb-platform)\n\nA [Hubot](https://hubot.github.com) adapter for the [Facebook Messenger Platform](https://messengerplatform.fb.com/). This adapter fully supports everything the v2.6 Messenger platform API is capable of:\n- Token validation and botside autosetup\n- Resolving user profiles (name and profile pictures from ids)\n- Send and receive text messages\n- Send templates and images (jpgs; pngs; animated gifs)\n- Receive images, location, and other attachments\n- Template postbacks\n- Quick replies\n\n[Changelog](/CHANGELOG.md)\n\n## Installation\n[See detailed installation instructions here.](/INSTALL.md)\n- For setting up a Hubot instance, [see here](https://hubot.github.com/docs/)\n- Create a [Facebook page](https://www.facebook.com/pages/create/) and [App](https://developers.facebook.com/quickstarts/?platform=web) (you can skip Quick Start after you create an App ID and enter your email), or use existing ones.\n- Install hubot-fb into your Hubot instance using by running ```npm install -save hubot-fb``` in your Hubot's root.\n- [Configure](#configuration) hubot-fb. Setting up webhooks and subscribing to pages will be done automatically by hubot-fb.\n- Set hubot-fb as your adapter by launching with ```bin/hubot -a fb```. (Edit your Procfile to do the same on Heroku.)\n\n\n## Warnings\nThis adapter will truncate messages longer than 320 characters (the maximum allowed by Facebook's API).  For alternate behavor, use a script like [hubot-chunkify](https://github.com/chen-ye/hubot-chunkify) or [hubot-longtext](https://github.com/ClaudeBot/hubot-longtext)\n\nIf you update a webhook, allow up to 10 minutes for Facebook to propagate your webhook, then it will start posting to the new webhook url.\n\n\n## Configuration\nRequired variables are in **bold**.\n\n| config variable           | type    | default   | description                                                                                                                                                                                                                               |\n|---------------------------|---------|-----------|-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|\n| **`FB_PAGE_ID`**   | string  | -         | Your Facebook Page ID. You can find it at `https://www.facebook.com/<YOUR PAGE USERNAME>/info?tab=page_info`.                                           |\n| **`FB_APP_ID`, `FB_APP_SECRET`**   | string  | -         | Your App ID and App Secret. You can find them at `https://developers.facebook.com/apps/`.                                           |\n| **`FB_WEBHOOK_BASE`**        | string  | - | The base url for a Facebook webhook subscription. This will be joined with `FB_ROUTE_URL`, e.g. `FB_WEBHOOK_BASE=https://mybot.com` and `FB_ROUTE_URL=/hubot/fb` will be passed to Facebook as `https://mybot.com/hubot/fb`. Note that the URL must use `https`.                                                                                                                                                                                        |\n| `FB_ROUTE_URL`        | string  | `/hubot/fb` | The webhook route path hubot-fb monitors for new message events.                                                                                                                                                                                         |\n| **`FB_PAGE_TOKEN`**   | string  | -         | Your [page access token](https://developers.facebook.com/docs/messenger-platform/implementation#page_access_token). You can get one at `https://developers.facebook.com/apps/<YOUR APP ID>/messenger/`.                                           |\n| `FB_VERIFY_TOKEN` | string  | -         | Your [verification token](https://developers.facebook.com/docs/graph-api/webhooks#setup). This is the string your app expects when you modify a webhook subscription at `https://developers.facebook.com/apps/<YOUR APP ID>/webhooks/`. One will be automatically set for you if you do not specify a token. |\n| `FB_AUTOHEAR`        | boolean  | `false` | Prepend a `@<robot.name>` to all dirrect messages to your robot, so that it'll respond to a direct message even if not explicitly invoked. E.g., for a robot named \"hubot\", both \"ping\" and \"@hubot ping\" will be passed as \"@hubot ping\" |\n| `FB_SEND_IMAGES`      | boolean | `true`      | Whether or not hubot-fb should automatically convert compatible urls into image attachments                                                                                                                                               |\n\n## Use\n### Sending Rich Messages (Templates, Images)\n_Note: If you just want to send images, you can also send a standard image url in your message text with `FB_SEND_IMAGES` set to `true`._\nTo send rich messages, include in your envelope \n``` \nenvelope = \n{\n    fb: {\n        richMsg: [RICH_MESSAGE]\n    },\n    user[...]\n}\n```\n\nIn a response, this would look something like:\n\n```\nrobot.hear /getting chilly/i, (res) ->\n    res.envelope.fb = {\n      richMsg: {\n        attachment: {\n          type: \"template\",\n          payload: {\n            template_type: \"button\",\n            text: \"Do you wanna build a snowman?\",\n            buttons: [\n              {\n                type: \"web_url\",\n                url: \"http://www.dailymotion.com/video/x1fa7w8_frozen-do-you-wanna-build-the-snowman-1080p-official-hd-music-video_music\",\n                title: \"Yes\"\n              },\n              {\n                type: \"web_url\",\n                title: \"No\",\n                url: \"http://wallpaper.ultradownloads.com.br/275633_Papel-de-Parede-Meme-Okay-Face_1600x1200.jpg\"\n              }\n            ]\n          }\n        }\n      }\n    }\n    res.send()\n```\n\n\nSee Facebook's API reference [here](https://developers.facebook.com/docs/messenger-platform/send-api-reference#guidelines) for further examples of rich messages.\n\n### Events\nEvents allow you react to input that Hubot doesn't natively support. This adapter emits `fb_postback`, `fb_delivery`, `fb_richMsg`, and `fb_richMsg_[ATTACHMENT_TYPE]` events. \n\nRegister a listener using `robot.on [EVENT_NAME] [CALLBACK]`.\n\n| event name                     | callback object                                                                            | description                                                                                                                                                                |\n|--------------------------------|--------------------------------------------------------------------------------------------|----------------------------------------------------------------------------------------------------------------------------------------------------------------------------|\n| `fb_postback`                  | ``` { event: msgevent, user: hubot.user, room: string,   payload: string } ``` | Emitted when a postback is triggered.                                                                                                                                      |\n| `fb_delivery`                  | ```{ event: msgevent, user: hubot.user, room: string }```                               | Emitted when a delivery confirmation is sent.                                                                                                                              |\n| `fb_richMsg`                   | ```{ event: msgevent, user: hubot.user, room: string, attachments: array[msgevent.message.attachment]}```          | Emitted when a message with an attachment is sent. Contains all attachments within that message.                                                                           |\n| `fb_richMsg_[ATTACHMENT.TYPE]` | ```{ event: msgevent, user: hubot.user, room: string, attachment: msgevent.message.attachment}```          | Emitted when a message with an attachment is sent. Contains a single attachment of type [ATTACHMENT.TYPE], and multiple are emitted in messages with multiple attachments. |\n| `fb_optin` or `fb_authentication` | ``` { event: msgevent, user: hubot.user, room: string, ref: string } ``` | Emitted when an [authentication event](https://developers.facebook.com/docs/messenger-platform/plugin-reference#send_to_messenger) is triggered\n\n#### `fb_postback` example\n\nResponding to an event is a bit more manual—here's an example.  \n\n```\n# You need this to manually compose a Response\n{Response} = require 'hubot'\n\nmodule.exports = (robot) ->\n\n  # This can exist alongside your other hooks\n  robot.on \"fb_postback\", (envelope) -> \n    res = new Response robot, envelope, undefined\n    if envelope.payload is \"send_ok_face\"\n      res.send \"http://wallpaper.ultradownloads.com.br/275633_Papel-de-Parede-Meme-Okay-Face_1600x1200.jpg\"\n```\n\nOf course, postbacks can do anything in your application—not just trigger responses.  \n\n","maintainers":[{"name":"danyelk","email":"danyel.nerv@gmail.com"}],"time":{"modified":"2017-05-05T23:22:14.852Z","created":"2016-11-25T20:34:29.549Z","5.0.0":"2016-11-25T20:34:29.549Z","5.0.1":"2017-05-05T23:12:57.282Z","5.0.2":"2017-05-05T23:22:14.852Z"},"homepage":"https://github.com/DKByo/hubot-fb-platform","keywords":["facebook messenger","hubot","hubot-scripts","hubot-adapters"],"repository":{"type":"git","url":"git+https://github.com/DKByo/hubot-fb-platform.git"},"contributors":[{"name":"Danyel Cabello","email":"danyel.nerv@gmail.com","url":"http://codecaster.net"}],"author":{"name":"Chen Ye","email":"cye@brown.edu","url":"cye.me"},"bugs":{"url":"https://github.com/DKByo/hubot-fb-platform/issues"},"license":"ISC","readmeFilename":"README.md"}
