{"_id":"hubot-incoming-webhook","_rev":"3-7ac55eab87f3bf41d489729baa5c86e4","name":"hubot-incoming-webhook","description":"Accept incoming Webhooks to write messages to a room/channel","dist-tags":{"latest":"1.1.0"},"versions":{"1.0.0":{"name":"hubot-incoming-webhook","version":"1.0.0","description":"Accept incoming Webhooks to write messages to a room/channel","main":"index.js","scripts":{"test":"echo \"Error: no test specified\" && exit 1"},"keywords":["hubot","hubot-script"],"authors":["Sebastian Kippe <sebastian@kip.pe>"],"license":"MIT","repository":{"type":"git","url":"git+https://github.com/67P/hubot-incoming-webhook.git"},"engines":{"node":">=4.0.0","npm":">=3.0.0"},"gitHead":"06d464c974a5e9e4e99f14fcc69bb678b1e7ee09","bugs":{"url":"https://github.com/67P/hubot-incoming-webhook/issues"},"homepage":"https://github.com/67P/hubot-incoming-webhook#readme","_id":"hubot-incoming-webhook@1.0.0","_shasum":"235e5ebc9ea17a6be009ff1719ad61f952304d17","_from":".","_npmVersion":"3.5.3","_nodeVersion":"5.0.0","_npmUser":{"name":"skddc","email":"sebastian@kip.pe"},"dist":{"shasum":"235e5ebc9ea17a6be009ff1719ad61f952304d17","tarball":"http://registry.npmjs.org/hubot-incoming-webhook/-/hubot-incoming-webhook-1.0.0.tgz"},"maintainers":[{"name":"skddc","email":"sebastian@kip.pe"}],"_npmOperationalInternal":{"host":"packages-5-east.internal.npmjs.com","tmp":"tmp/hubot-incoming-webhook-1.0.0.tgz_1455991031445_0.3486547397915274"},"directories":{}},"1.0.1":{"name":"hubot-incoming-webhook","version":"1.0.1","description":"Accept incoming Webhooks to write messages to a room/channel","main":"index.js","scripts":{"test":"echo \"Error: no test specified\" && exit 1"},"keywords":["hubot","hubot-script"],"authors":["Sebastian Kippe <sebastian@kip.pe>"],"license":"MIT","repository":{"type":"git","url":"git+https://github.com/67P/hubot-incoming-webhook.git"},"engines":{"node":">=4.0.0","npm":">=3.0.0"},"gitHead":"fac4eec82445778a19c3e09fe29ece8c1cae0237","bugs":{"url":"https://github.com/67P/hubot-incoming-webhook/issues"},"homepage":"https://github.com/67P/hubot-incoming-webhook#readme","_id":"hubot-incoming-webhook@1.0.1","_shasum":"bb2fff17993885dc6df8a37899549cfe2bf247da","_from":".","_npmVersion":"3.5.3","_nodeVersion":"5.0.0","_npmUser":{"name":"skddc","email":"sebastian@kip.pe"},"dist":{"shasum":"bb2fff17993885dc6df8a37899549cfe2bf247da","tarball":"http://registry.npmjs.org/hubot-incoming-webhook/-/hubot-incoming-webhook-1.0.1.tgz"},"maintainers":[{"name":"skddc","email":"sebastian@kip.pe"}],"_npmOperationalInternal":{"host":"packages-9-west.internal.npmjs.com","tmp":"tmp/hubot-incoming-webhook-1.0.1.tgz_1455992738359_0.4934424685779959"},"directories":{}},"1.1.0":{"name":"hubot-incoming-webhook","version":"1.1.0","description":"Accept incoming Webhooks to write messages to a room/channel","main":"index.js","scripts":{"test":"mocha test/*.js"},"keywords":["hubot","hubot-script"],"authors":["Sebastian Kippe <sebastian@kip.pe>"],"license":"MIT","repository":{"type":"git","url":"git+https://github.com/67P/hubot-incoming-webhook.git"},"dependencies":{"ent":"^2.2.0","npm":"^5.8.0"},"engines":{"node":">=4.0.0","npm":">=3.0.0"},"devDependencies":{"chai":"^4.1.2","hubot-test-helper":"^1.9.0","mocha":"^5.0.5"},"gitHead":"d69c26f55a54f0cf2dd85b5417f8b52cc090758d","bugs":{"url":"https://github.com/67P/hubot-incoming-webhook/issues"},"homepage":"https://github.com/67P/hubot-incoming-webhook#readme","_id":"hubot-incoming-webhook@1.1.0","_npmVersion":"5.7.1","_nodeVersion":"9.8.0","_npmUser":{"name":"skddc","email":"sebastian@kip.pe"},"dist":{"integrity":"sha512-xuJJBz699oWZl9zle0veuFGb9opd8DilMochzhKIxbr0+/ExuNyhzcfvEdYWsamT1gHnPbD9RqMVoOxMtF0hTw==","shasum":"10a96d889fdceaa874cfd809e4a93ef3e8763b3c","tarball":"http://registry.npmjs.org/hubot-incoming-webhook/-/hubot-incoming-webhook-1.1.0.tgz","fileCount":9,"unpackedSize":8437},"maintainers":[{"name":"skddc","email":"sebastian@kip.pe"}],"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/hubot-incoming-webhook_1.1.0_1522253038343_0.8087579202344382"},"_hasShrinkwrap":false}},"readme":"# Hubot Incoming Webhook\n\nA (very simple) hubot script for sending messages to a channel/room via HTTP\nPOST requests to your bot.\n\n## Installation\n\nInstall script package in your bot's repository:\n\n    npm install --save hubot-incoming-webhook\n\nAdd to `external_scripts.json`:\n\n```json\n[\n  \"hubot-incoming-webhook\"\n]\n```\n\nSet the `WEBHOOK_TOKEN` environment variable to a secret string of your choice\nwhen running the bot. It will be used in the incoming webhook URLs.\n\n## Usage\n\n### Generic hooks\n\nThe generic Webhook allows you to send arbitrary messages to a room of your\nchoice, by POSTing a simple JSON body to the webhook URL.\n\nThe URL is constructed as follows: `http(s)://<host>:<port>/incoming/<your-secret-token>`\n\n| Key | Value |\n| --- | ----- |\n| room | (string) The room/channel you want to post to. |\n| message | (string/array) The message you want to post. Can be an array for multiple lines. |\n\nExample:\n\n```sh\ncurl -X POST -H \"Content-Type: application/json\" \\\n     -d '{\"room\": \"#kosmos\", \"message\": \"ohai\"}' \\\n     http://127.0.0.1:8080/incoming/your-secret-token\n```\n\n### UptimeRobot\n\nThis hook allows you to receive hooks from UptimeRobot, and announce your\naccount's uptime status changes/events in a room of your choice.\n\nThe URL is constructed as follows: `http(s)://<host>:<port>/incoming/uptimerobot/<your-secret-token>`\n\nIn [UptimeRobot's settings](https://uptimerobot.com/dashboard#mySettings),\nadd the following webhook as an alert contact (you must set the room that you\nwant the bot to send messages to):\n\n```\nhttp(s)://<host>:<port>/incoming/uptimerobot/<your-secret-token>?room=ops@example.com&\n```\n\nDon't forget the trailing ampersand, this is required so UptimeRobot can add\ntheir query strings to the request for the monitor ID, status, and so on.\n\nEnable the webhook Alert Contact for each monitor. You can perform a\n[bulk action](https://uptimerobot.com/dashboard#bulkActions) to do it for all\nat once.\n\n## Configuration\n\n| Key | Description |\n| --- | ----------- |\n| `WEBHOOK_TOKEN` | A string for building your secret webhook URLs\n\n## Adapter-specific config/hints\n\n### IRC\n\nInclude the hash character for IRC channels in the `room` value.\n\n### Mattermost (tested with hubot-matteruser)\n\nFind the unique ID of the channel (not the display name) and use it for the `room` value.\n\n## Development\n\n### Tests\n\nThe tests are inside of the `test` folder. To run them:\n\n    npm test\n","maintainers":[{"name":"skddc","email":"sebastian@kip.pe"}],"time":{"modified":"2018-03-28T16:03:58.973Z","created":"2016-02-20T17:57:14.274Z","1.0.0":"2016-02-20T17:57:14.274Z","1.0.1":"2016-02-20T18:25:42.865Z","1.1.0":"2018-03-28T16:03:58.503Z"},"homepage":"https://github.com/67P/hubot-incoming-webhook#readme","keywords":["hubot","hubot-script"],"repository":{"type":"git","url":"git+https://github.com/67P/hubot-incoming-webhook.git"},"bugs":{"url":"https://github.com/67P/hubot-incoming-webhook/issues"},"license":"MIT","readmeFilename":"README.md"}
