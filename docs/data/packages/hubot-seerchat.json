{"_id":"hubot-seerchat","_rev":"5-cb7fef243db4e72debc0ae4946b51bf3","name":"hubot-seerchat","description":"Hobot Seerline Adapter, this package fork from Rocket.Chat","dist-tags":{"latest":"1.0.4"},"versions":{"1.0.0":{"name":"hubot-seerchat","version":"1.0.0","description":"Hobot Seerline Adapter, this package fork from Rocket.Chat","main":"./src/seerchat","scripts":{"test":"echo \"Error: no test specified\" && exit 1"},"author":{"name":"Seerline Team","url":"http://www.caifujilu.com"},"contributors":[{"name":"Michael xu","email":"michael_xu@caifujilu.com"}],"keywords":["hubot","adapter","seerline","seer","chat"],"repository":{"type":"git","url":"git+https://github.com/Micjoyce/hubot-seerchat.git"},"dependencies":{"asteroid":"git+https://github.com/RocketChat/asteroid.git","lru-cache":"~4.0.2","parent-require":"^1.0.0","q":"^1.5.0"},"devDependencies":{"coffee-script":"~1.12.6"},"bugs":{"url":"https://github.com/Micjoyce/hubot-seerchat/issues","email":"support@rocket.chat"},"license":"MIT","gitHead":"6a2944cf6d42c28c9950af0688f4c984f0f87d10","homepage":"https://github.com/Micjoyce/hubot-seerchat#readme","_id":"hubot-seerchat@1.0.0","_npmVersion":"5.5.1","_nodeVersion":"6.11.0","_npmUser":{"name":"michaelxu","email":"micjoyce90@gmail.com"},"dist":{"integrity":"sha512-Wb06wAQxekPNSbI+0HHL6zxp3xx10c5fllitLlDsJCaYC98WcRLhmASeMACAHkJeNJ17ZWd89GVx66mJ4MQr/w==","shasum":"497845024b6cf14dbb74f18e1009e6a30e6aa182","tarball":"https://registry.npmjs.org/hubot-seerchat/-/hubot-seerchat-1.0.0.tgz"},"maintainers":[{"name":"michaelxu","email":"micjoyce90@gmail.com"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/hubot-seerchat-1.0.0.tgz_1509885308112_0.7751526527572423"},"directories":{}},"1.0.1":{"name":"hubot-seerchat","version":"1.0.1","description":"Hobot Seerline Adapter, this package fork from Rocket.Chat","main":"./src/seerchat","scripts":{"test":"echo \"Error: no test specified\" && exit 1"},"author":{"name":"Seerline Team","url":"http://www.caifujilu.com"},"contributors":[{"name":"Michael xu","email":"michael_xu@caifujilu.com"}],"keywords":["hubot","adapter","seerline","seer","chat"],"repository":{"type":"git","url":"git+https://github.com/Micjoyce/hubot-seerchat.git"},"dependencies":{"asteroid":"git+https://github.com/RocketChat/asteroid.git","lru-cache":"~4.0.2","parent-require":"^1.0.0","q":"^1.5.0"},"devDependencies":{"coffee-script":"~1.12.6"},"bugs":{"url":"https://github.com/Micjoyce/hubot-seerchat/issues","email":"support@rocket.chat"},"license":"MIT","gitHead":"c8ee178bcfc316ec32711340a9b3c4ca5d6183f9","homepage":"https://github.com/Micjoyce/hubot-seerchat#readme","_id":"hubot-seerchat@1.0.1","_npmVersion":"5.5.1","_nodeVersion":"6.11.0","_npmUser":{"name":"michaelxu","email":"micjoyce90@gmail.com"},"dist":{"integrity":"sha512-63js0uxQU0f/gamNYFFEs8Sb3h4wSLvyT5OAbSk9QmwhkJPMfJdonTv8Go0EArljdviK5KuhJHD+tQOojot1qw==","shasum":"1c43cf83cc8bd6bdef07ad5e48f325855f1f0bc2","tarball":"https://registry.npmjs.org/hubot-seerchat/-/hubot-seerchat-1.0.1.tgz"},"maintainers":[{"name":"michaelxu","email":"micjoyce90@gmail.com"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/hubot-seerchat-1.0.1.tgz_1509888731384_0.8238588040694594"},"directories":{}},"1.0.2":{"name":"hubot-seerchat","version":"1.0.2","description":"Hobot Seerline Adapter, this package fork from Rocket.Chat","main":"./src/seerchat","scripts":{"test":"echo \"Error: no test specified\" && exit 1"},"author":{"name":"Seerline Team","url":"http://www.caifujilu.com"},"contributors":[{"name":"Michael xu","email":"michael_xu@caifujilu.com"}],"keywords":["hubot","adapter","seerline","seer","chat"],"repository":{"type":"git","url":"git+https://github.com/Micjoyce/hubot-seerchat.git"},"dependencies":{"asteroid":"git+https://github.com/RocketChat/asteroid.git","lru-cache":"~4.0.2","parent-require":"^1.0.0","q":"^1.5.0"},"devDependencies":{"coffee-script":"~1.12.6"},"bugs":{"url":"https://github.com/Micjoyce/hubot-seerchat/issues","email":"support@rocket.chat"},"license":"MIT","gitHead":"5d550abea3a4034db3bae55ddee84fac0eeebe1e","homepage":"https://github.com/Micjoyce/hubot-seerchat#readme","_id":"hubot-seerchat@1.0.2","_npmVersion":"5.5.1","_nodeVersion":"6.11.0","_npmUser":{"name":"michaelxu","email":"micjoyce90@gmail.com"},"dist":{"integrity":"sha512-MdY13wCzPD7UL3Q2qFX1gE6PP0zEaCAVsCn3krxTgFfMhB+Sznyd9w/ok/Ih5vJnLMaZPT2bEYjvRdmp8ug7BQ==","shasum":"b59f2c30620d2a6e911170986158ceeb4ec42a87","tarball":"https://registry.npmjs.org/hubot-seerchat/-/hubot-seerchat-1.0.2.tgz"},"maintainers":[{"name":"michaelxu","email":"micjoyce90@gmail.com"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/hubot-seerchat-1.0.2.tgz_1509945415505_0.9230382598470896"},"directories":{}},"1.0.3":{"name":"hubot-seerchat","version":"1.0.3","description":"Hobot Seerline Adapter, this package fork from Rocket.Chat","main":"./src/seerchat","scripts":{"test":"echo \"Error: no test specified\" && exit 1"},"author":{"name":"Seerline Team","url":"http://www.caifujilu.com"},"contributors":[{"name":"Michael xu","email":"michael_xu@caifujilu.com"}],"keywords":["hubot","adapter","seerline","seer","chat"],"repository":{"type":"git","url":"git+https://github.com/Micjoyce/hubot-seerchat.git"},"dependencies":{"asteroid":"git+https://github.com/RocketChat/asteroid.git","lru-cache":"~4.0.2","parent-require":"^1.0.0","q":"^1.5.0"},"devDependencies":{"coffee-script":"~1.12.6"},"bugs":{"url":"https://github.com/Micjoyce/hubot-seerchat/issues","email":"support@rocket.chat"},"license":"MIT","gitHead":"5893699936a5bc018d8a5c2963303c8133136e67","homepage":"https://github.com/Micjoyce/hubot-seerchat#readme","_id":"hubot-seerchat@1.0.3","_npmVersion":"5.5.1","_nodeVersion":"6.11.0","_npmUser":{"name":"michaelxu","email":"micjoyce90@gmail.com"},"dist":{"integrity":"sha512-fcTJ4TF/SNL4fHFlCegCivev+17AsQEa1fOrrql9xbcWwv47SsxtQeW1egghiqDiy6v7l3fUxxt1EuRif7ok4w==","shasum":"755c1c58add795ad819517cfd5f295642bbb9ed5","tarball":"https://registry.npmjs.org/hubot-seerchat/-/hubot-seerchat-1.0.3.tgz"},"maintainers":[{"name":"michaelxu","email":"micjoyce90@gmail.com"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/hubot-seerchat-1.0.3.tgz_1509945840413_0.3312175830360502"},"directories":{}},"1.0.4":{"name":"hubot-seerchat","version":"1.0.4","description":"Hobot Seerline Adapter, this package fork from Rocket.Chat","main":"./src/seerchat","scripts":{"test":"echo \"Error: no test specified\" && exit 1"},"author":{"name":"Seerline Team","url":"http://www.caifujilu.com"},"contributors":[{"name":"Michael xu","email":"michael_xu@caifujilu.com"}],"keywords":["hubot","adapter","seerline","seer","chat"],"repository":{"type":"git","url":"git+https://github.com/Micjoyce/hubot-seerchat.git"},"dependencies":{"asteroid":"git+https://github.com/RocketChat/asteroid.git","lru-cache":"~4.0.2","parent-require":"^1.0.0","q":"^1.5.0"},"devDependencies":{"coffee-script":"~1.12.6"},"bugs":{"url":"https://github.com/Micjoyce/hubot-seerchat/issues","email":"support@rocket.chat"},"license":"MIT","gitHead":"e83120391412811d3dc9f4612a24c328c4d47ed4","homepage":"https://github.com/Micjoyce/hubot-seerchat#readme","_id":"hubot-seerchat@1.0.4","_npmVersion":"5.5.1","_nodeVersion":"6.11.0","_npmUser":{"name":"michaelxu","email":"micjoyce90@gmail.com"},"dist":{"integrity":"sha512-mpucf9PSKpA/puOetBTHHer2iBljE8rZeGQrzkVypApV638Wf8msadygoOzubRdQySljDG4hUjFJYgRAQbSpxg==","shasum":"eed947659702270159e297bf28204194e9f0d09a","tarball":"https://registry.npmjs.org/hubot-seerchat/-/hubot-seerchat-1.0.4.tgz"},"maintainers":[{"name":"michaelxu","email":"micjoyce90@gmail.com"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/hubot-seerchat-1.0.4.tgz_1509955633882_0.5547269077505916"},"directories":{}}},"readme":"# This project is fork from Rocket.Chat and fix for seerchat\n\n[hubot-rocket](https://github.com/RocketChat/hubot-rocketchat)\n\n![Rocket.Chat logo](https://rocket.chat/images/logo/logo-dark.svg?v3)\n\n[![Rocket.Chat](https://open.rocket.chat/api/v1/shield.svg?type=channel&name=Rocket.Chat&channel=hubot)](https://open.rocket.chat/channel/hubot)\n[![Test Coverage](https://codeclimate.com/github/RocketChat/hubot-rocketchat/badges/coverage.svg)](https://codeclimate.com/github/RocketChat/hubot-rocketchat/coverage)\n[![Code Climate](https://codeclimate.com/github/RocketChat/hubot-rocketchat/badges/gpa.svg)](https://codeclimate.com/github/RocketChat/hubot-rocketchat)\n[![MIT License](http://img.shields.io/badge/license-MIT-blue.svg?style=flat)](https://github.com/RocketChat/Rocket.Chat/raw/master/LICENSE)\n\n# hubot-rocketchat\n\nHubot adapter for Rocket.Chat!\n\nFeel free to join us in the [#hubot](https://open.rocket.chat/channel/hubot) channel to discuss hubot, and any scripts you might be working on.\n\n## Important\n\nThe latest version of the adapter is only compatible with 0.37.1 and higher of Rocket.Chat Server.\n\nIf you are using Rocket.Chat  0.35.0 or earlier, please use v0.1.4 of the adapter.  (releases between 0.35.0 and 0.37.1 are not recommended for hubot operations) \n\n#### NOTE\nIf you want to integrate Rocket.Chat with GitHub or GitLab.  Make sure you visit the [Rocket.Chat.Ops](https://github.com/RocketChat/Rocket.Chat.Ops) project before starting. We already have many scripts that add webhook events and access GitHub/GitLab APIs. You can easily extend these scripts for your custom application.\n\n## Getting your bot connected to Rocket.Chat\n\nHere is a sample run:\n\n![picture of a sample interaction with rocketbot](https://raw.githubusercontent.com/Sing-Li/bbug/master/images/botpic.png)\n\nWe have a couple of ways for you to get up and started with the Rocket.Chat adapter.\n\n### Docker\n\nYou can quickly spin up a docker image with:\n\n```\ndocker run -it -e ROCKETCHAT_URL=<your rocketchat instance>:<port> \\\n\t-e ROCKETCHAT_ROOM='' \\\n\t-e LISTEN_ON_ALL_PUBLIC=true \\\n\t-e ROCKETCHAT_USER=bot \\\n\t-e ROCKETCHAT_PASSWORD=bot \\\n\t-e ROCKETCHAT_AUTH=password \\\n\t-e BOT_NAME=bot \\\n\t-e EXTERNAL_SCRIPTS=hubot-pugme,hubot-help \\\n\trocketchat/hubot-rocketchat\n```\n\n#### Custom Scripts\n\nIf you want to include your own custom scripts you can by doing:\n\n```\ndocker run -it -e ROCKETCHAT_URL=<your rocketchat instance>:<port> \\\n\t-e ROCKETCHAT_ROOM='' \\\n\t-e LISTEN_ON_ALL_PUBLIC=true \\\n\t-e ROCKETCHAT_USER=bot \\\n\t-e ROCKETCHAT_PASSWORD=bot \\\n\t-e ROCKETCHAT_AUTH=password \\\n\t-e BOT_NAME=bot \\\n\t-e EXTERNAL_SCRIPTS=hubot-pugme,hubot-help \\\n\t-v $PWD/scripts:/home/hubot/scripts \\\n\trocketchat/hubot-rocketchat\n```\n\n### Docker-compose\n\nIf you want to use docker-compose for this task, add this for v0.1.4 adapter (this must be inserted in your docker-compose.yml):\n\n```\n# hubot, the popular chatbot (add the bot user first and change the password before starting this image)\nhubot:\n  image: rocketchat/hubot-rocketchat:v0.1.4\n  environment:\n    - ROCKETCHAT_URL=your-rocket-chat-instance-ip:3000 (e.g. 192.168.2.240:3000)\n    - ROCKETCHAT_ROOM=\n    - LISTEN_ON_ALL_PUBLIC=true\n    - ROCKETCHAT_USER=username-of-your-bot\n    - ROCKETCHAT_PASSWORD=yourpass\n    - BOT_NAME=bot\n    - GOOGLE_API_KEY=yourgoogleapikey\n# you can add more scripts as you'd like here, they need to be installable by npm\n    - EXTERNAL_SCRIPTS=hubot-help,hubot-seen,hubot-links,hubot-diagnostics,hubot-google,hubot-reddit,hubot-bofh,hubot-bookmark,hubot-shipit,hubot-maps\n  links:\n    - rocketchat:rocketchat\n# this is used to expose the hubot port for notifications on the host on port 3001, e.g. for hubot-jenkins-notifier\n  ports:\n    - 3001:8080\n```\n\n If you wish that your bot listen to all public rooms and all private rooms he is joined to let the env \"ROCKETCHAT_ROOM\" empty like in the example above and set the env \"LISTEN_ON_ALL_PUBLIC\" to true.\n \n Please take attention to some external scripts that are in the example above, some of them need your Google-API-Key in the docker compose file.\n\n### Add adapter to hubot\n\n#### New install\nYou can specify the adapter during setup.\n\nFirst you need to install hubot\n\n```\nnpm install -g yo generator-hubot\n```\n\nThen you need to start the setup of the bot\n\n```\nmkdir myhubot\ncd myhubot\nyo hubot --adapter=\"rocketchat@1\"\n```\n\nIt'll ask you a few questions.\n\nAlternatively you can actually answer the questions in one command:\n\n```\nyo hubot --owner=\"OWNER <owner@example.com>\" --name=\"bot\" --description=\"Bot\" --adapter=\"rocketchat@0.1\"\n```\n\nAlso be sure to remember the name you specify.  This is what the bot will respond to in Rocket.Chat.\n\nYou will need to tell the adapter where your install is and what login information to use.\n\n```\nexport ROCKETCHAT_ROOM=''\nexport LISTEN_ON_ALL_PUBLIC=true\nexport ROCKETCHAT_USER=bot\nexport ROCKETCHAT_PASSWORD=bot\nexport ROCKETCHAT_AUTH=password\n```\n\nThen start with: `bin/hubot -a rocketchat`\n\n[More Info Here](https://hubot.github.com/docs/)\n\n#### Existing install\nIf you already have hubot setup you can add the adapter.\n\nBy doing: `npm install hubot-rocketchat@1`\n\nYou will need to tell the adapter where your install is and what login information to use.\n\n```\nexport ROCKETCHAT_ROOM=''\nexport LISTEN_ON_ALL_PUBLIC=true\nexport ROCKETCHAT_USER=bot\nexport ROCKETCHAT_PASSWORD=bot\nexport ROCKETCHAT_AUTH=ldap\n```\n\nThen starting your bot specifying the adapter: `bin/hubot -a rocketchat`\n\n#### Configuration Options\n\nHere are all of the options you can specify to configure the bot.\n\nOn Docker you use: `-e VAR=Value`\n\nRegular hubot via: `export VAR=Value` or add to pm2 etc\n\nEnvironment Variable | Description\n:---- | :----\nROCKETCHAT_URL | the URL where Rocket.Chat is running, can be specified as `host:port` or `http://host:port`  or `https://host:port`. If you are using `https://`, you **MUST** setup websocket pass-through on your reverse proxy (NGINX, and so on) with a valid certificate (not self-signed).  Directly accessing Rocket.Chat without a reverse proxy via `https://` is not possible.\nROCKETCHAT_USER | the bot user's name. It must be a registered user on your Rocket.Chat server, and the user must be granted `bot` role via Rocket.Chat's administrator's panel  (note that this will also be the name that you can summon the bot with)\nROCKETCHAT_PASSWORD | the bot user's password\nROCKETCHAT_AUTH | defaults to 'password' if undefined, or set to 'ldap' if your use LDAP accounts for bots.\nROCKETCHAT_ROOM | the channel/channels names the bot should listen to message from.  This can be comma separated list.\nLISTEN_ON_ALL_PUBLIC | if 'true' then bot will listen and respond to messages from all public channels, as well as respond to direct messages. Default to 'false'. ROCKETCHAT_ROOM should be set to empty (with `ROCKETCHAT_ROOM=''` ) when using `LISTEN_ON_ALL_PUBLIC`. *IMPORTANT NOTE*:  This option also allows the bot to listen and respond to messages _from all newly created private groups_ that the bot's user has been added as a member.\nRESPOND_TO_DM | if 'true' then bot will respond to direct messages. When setting the option to 'true', be sure to also set ROCKETCHAT_ROOM or LISTEN_ON_ALL_PUBLIC.  Default is 'false'.\nRESPOND_TO_EDITED | if 'true' then bot will respond to edited messages. Default is 'false'.\nROOM_ID_CACHE_SIZE | The maximum number of room IDs to cache. You can increase this if your bot usually sends messages to a large number of different rooms. Default value: 10\nDM_ROOM_ID_CACHE_SIZE | The maximum number of Direct Message room IDs to cache. You can increase this if your bot usually sends a large number of Direct Messages. Default value: 100\nROOM_ID_CACHE_MAX_AGE | Room IDs and DM Room IDS are cached for this number of seconds. You can increase this value to improve performance in certain scenarios. Default value: 300\nBOT_NAME | ** Name of the bot.  This is what it responds to\nEXTERNAL_SCRIPTS | ** These are the npm modules it will add to hubot.\n\n** - Docker image only.\n##### Configuring the Bot to listen and respond to direct messages plus all new public channels and private groups\n\nThis is a common configuration for Rocket.Chat bot installations.\n\nUse the following options:\n\n`LISTEN_ON_ALL_PUBLIC=true`  and `ROCKETCHAT_ROOM=''`  and *do not* specify `RESPOND_TO_DM`\n\nBe aware you *must* add the bot's user as a member of the new private group(s) before it will respond.\n\n### Verify your bot is working\nTry:\n```\nrocketbot ping\n```\n\nAnd:\n```\nrocketbot help\n```\nThe example bot under `scripts` directory responds to:\n```\nrocketbot report status\n```\n\n## Developers\n\nWe like to make development as easy on ourselves as possible.  So passing the love on to you!\n\n### Adapter Development\nWe'd love to have your help improving this adapter. PR's very welcome :smile:\n\n#### Docker\n\nFirst clone the source and then move into the directory.\n\n```\ngit clone git@github.com:RocketChat/hubot-rocketchat.git\ncd hubot-rocketchat\n```\n\nNow we start the docker container.\n\n```\ndocker run -it -e ROCKETCHAT_URL=<your rocketchat instance>:<port> \\\n\t-e ROCKETCHAT_ROOM='' \\\n\t-e LISTEN_ON_ALL_PUBLIC=true \\\n\t-e ROCKETCHAT_USER=bot \\\n\t-e ROCKETCHAT_PASSWORD=bot \\\n\t-e ROCKETCHAT_AUTH=password \\\n\t-e BOT_NAME=bot \\\n\t-e EXTERNAL_SCRIPTS=hubot-pugme,hubot-help \\\n\t-v $PWD:/home/hubot/node_modules/hubot-rocketchat rocketchat/hubot-rocketchat\n```\n\n#### Standard\n\nInstalled in hubot you'd hop over into `node_modules`.\n\nDelete the hubot-rocketchat folder.\n\nThen clone the git repo.\n\n```\ngit clone git@github.com:RocketChat/hubot-rocketchat.git\ncd hubot-rocketchat\nnpm install\n```\n\n#### Additional details\nLook under the `scripts` directory, you will find a very basic bot there.\n\nJust add your own script in the directory to have it loaded.  If you are new to hubot script writing, find out more [here](https://hubot.github.com/docs/scripting/).\n\nIf you find a bug or compatibility problem, please open an issue.\n\nIf you have any enhancements or feature requests, create an issue.  If you like what you see, please star the repo.\n\nFinally, if you have created a bot that other users may find useful, please contribute it.\n\n\n#### Some important notes\n\n* The first time you run the docker container, the image needs to be pulled from the public docker registry and it will take some time.  Subsequent runs are super fast.\n* If you are not running Linux (i.e. if you are on a Mac or PC), you cannot use $PWD to mount the volumes.  Instead, [read this note here](https://docs.docker.com/userguide/dockervolumes/) (the 2nd note on the page: *If you are using Boot2Docker...*) to determine the absolute path where you must place the git-cloned directory.\n\n### CONTRIBUTORS WANTED\n\nWhile it is functional, the current adapter is very basic.  We need all the help we can get to add capabilities.\n\nBecome part of the project, just pick an issue and file a PR.\n\nThe adapter code is under the `src` directory.   To test modified adapter code, exit (ctrl-c) the container and run it again.\n\n\n### FAQ\n\nQ:  I am not trying to stage a denial of service attack, why would I ever want to write a bot?\n\nA:  There are many positive and productive use cases for bots.    Imagine a customer service support chat.   As soon as a customer enters the support channel, a bot immediately identifies the customer and then:\n* fetches recent sales information from the sales dept server\n* fetches personal information from the customer data base\n* fetches latest notes made by her/his salesperson from the CRM system\n* scans the customer's facebook and twitter posts\n* obtains details of the last support ticket for this customer\n\nPutting it altogether and then private message the service rep with the information.\n\nAnother use-case is a load test bot, imagine a bot that accepts the command:\n\n````\nrocketbot loadtest europe 25, asia 50, usa 100, canada 10\n````\nThis command specifies a distribution of test bot instances, to be created across globally located data centers.\n\nOnce received, the bot:\n* parses the distribution\n* concurrently ssh to remote Kubernetes controllers and spawns the specified number of test bot instances to start the load test\n\nQ:   The architecture of hubot-rocketchat looks interesting, can you tell me more about it?\n\nA:  Sure, it is based on hubot-meteorchat.  hubot-meteorchat is the hubot integration project for Meteor based chats and real-time messaging systems.  Its driver based architecture simplifies creation and customization of adapter for new systems. For example, the hubot-rocketchat integration is just hubot-meteorchat + Rocket.Chat driver.\n\nLearn more about hubot-meteorchat and other available drivers [at this link](https://github.com/Sing-Li/hubot-meteorchat).\n","maintainers":[{"name":"michaelxu","email":"micjoyce90@gmail.com"}],"time":{"modified":"2017-11-06T08:07:13.944Z","created":"2017-11-05T12:35:08.290Z","1.0.0":"2017-11-05T12:35:08.290Z","1.0.1":"2017-11-05T13:32:11.508Z","1.0.2":"2017-11-06T05:16:55.634Z","1.0.3":"2017-11-06T05:24:00.503Z","1.0.4":"2017-11-06T08:07:13.944Z"},"homepage":"https://github.com/Micjoyce/hubot-seerchat#readme","keywords":["hubot","adapter","seerline","seer","chat"],"repository":{"type":"git","url":"git+https://github.com/Micjoyce/hubot-seerchat.git"},"contributors":[{"name":"Michael xu","email":"michael_xu@caifujilu.com"}],"author":{"name":"Seerline Team","url":"http://www.caifujilu.com"},"bugs":{"url":"https://github.com/Micjoyce/hubot-seerchat/issues","email":"support@rocket.chat"},"license":"MIT","readmeFilename":"README.md","_attachments":{}}