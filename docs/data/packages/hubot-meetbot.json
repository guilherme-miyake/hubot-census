{"_id":"hubot-meetbot","_rev":"1-8e64412e2f4bbcf04376fa1d7c76e544","name":"hubot-meetbot","description":"A hubot plugin to manage meetings, clone of debian meetbot.","dist-tags":{"latest":"0.0.1"},"versions":{"0.0.1":{"name":"hubot-meetbot","description":"A hubot plugin to manage meetings, clone of debian meetbot.","version":"0.0.1","author":{"name":"mose","email":"mose@mose.com","url":"https://github.com/mose"},"license":"MIT","keywords":["hubot","hubot-scripts"],"repository":{"type":"git","url":"git://github.com/mose/hubot-meetbot.git"},"bugs":{"url":"https://github.com/mose/hubot-meetbot/issues"},"dependencies":{"bluebird":"^3.5.1","moment":"^2.20.1"},"devDependencies":{"chai":"^2.1.1","codeclimate-test-reporter":"^0.3.3","coffee-coverage":"^1.0.1","coffee-script":"~1.6","coffeelint":"^1.15.7","coveralls":"^3.0.0","es6-promise":"^3.2.1","hubot":"2.x","hubot-auth":"^2.0.0","hubot-test-helper":"1.4.4","istanbul":"^0.4.4","mocha":"^2.4.5","sinon":"^3.2.0","sinon-chai":"^2.8.0","source-map-support":"^0.4.2","supertest":"^1.2.0"},"scripts":{"test":"make test","posttest":"coffeelint lib/* scripts/* test/* index.coffee"},"main":"index.js","gitHead":"3973c6cd062529cf9391b0249e40152c1bed848b","homepage":"https://github.com/mose/hubot-meetbot","_id":"hubot-meetbot@0.0.1","_shasum":"a7e76a7a330b434eace81c97e00ef436122c9aae","_from":".","_npmVersion":"1.4.28","_npmUser":{"name":"mose","email":"mose@mose.com"},"maintainers":[{"name":"mose","email":"mose@mose.com"}],"dist":{"shasum":"a7e76a7a330b434eace81c97e00ef436122c9aae","tarball":"https://registry.npmjs.org/hubot-meetbot/-/hubot-meetbot-0.0.1.tgz"},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/hubot-meetbot-0.0.1.tgz_1514402226896_0.5617902090307325"}}},"readme":"Hubot Meetbot Plugin\n=================================\n\n<!-- [![Version](https://img.shields.io/npm/v/hubot-meetbot.svg)](https://www.npmjs.com/package/hubot-meetbot) -->\n<!-- [![Downloads](https://img.shields.io/npm/dt/hubot-meetbot.svg)](https://www.npmjs.com/package/hubot-meetbot) -->\n[![Build Status](https://img.shields.io/travis/mose/hubot-meetbot.svg)](https://travis-ci.org/mose/hubot-meetbot)\n[![Dependency Status](https://gemnasium.com/mose/hubot-meetbot.svg)](https://gemnasium.com/mose/hubot-meetbot)\n[![Coverage Status](https://coveralls.io/repos/github/mose/hubot-meetbot/badge.svg?branch=master)](https://coveralls.io/github/mose/hubot-meetbot?branch=master)\n<!-- [![NPM](https://nodei.co/npm/hubot-meetbot.png?downloads=true&downloadRank=true&stars=true)](https://nodei.co/npm/hubot-meetbot/) -->\n\nThis plugin is a clone of the famous Debian Meetbot https://wiki.debian.org/MeetBot, for use of teams on slack.\n\n*Work in progress* - this plugin is ready for use but still very experimental.\n\n\nInstallation\n--------------\nIn your hubot directory:    \n\n    npm install hubot-meetbot --save\n\nThen add `hubot-meetbot` to `external-scripts.json`\n\n\nConfiguration\n-----------------\n\nIf you use [hubot-auth](https://github.com/hubot-scripts/hubot-auth), the plugin configuration commands will be restricted to user with the `admin` role. \n\nIf hubot-auth is not loaded, all users can access those commands. You can use those variables to tune things up a bit.\n\n- `MEETBOT_NOAUTH` - if defined, it will bypass the need to be admin to use the meetbot admin commands\n- `MEETBOT_AUTH_GROUP` - if defined it will permit group specified to use the meetbot admin commands\n\nIt's also advised to use a brain persistence plugin, whatever it is, to persist ongoing meeting sessions between restarts.\n\nWhen meeting is over and closed, the minutes will be emitted as a `meetbot.notes` event. For my immediate needs I have added a gitlab process to create a MR with the minutes in there, but later on other processors could be added (github, etherpad, mail, etc). In order for the processor to be functional, those 3 env variables have to be set:\n\n- `MEETBOT_GITLAB_URL`\n- `MEETBOT_GITLAB_APIKEY`\n- `MEETBOT_GITLAB_REPO`\n- `MEETBOT_GITLAB_FILEPATH` and `MEETBOT_GITLAB_DATEFORMAT` - \n    used to build the file name. optional. default is `minutes/%s-%s.md` and `YYYY-MM-DD`.  \n    format `MEETBOT_GITLAB_FILEPATH` gets `MEETBOT_GITLAB_DATEFORMAT` and meeting label as arguments\n\nCommands\n--------------\n\n**Note: until version 1.0.0, this readme is a roadmap, not a real documentation. This is a Readme-driven development approach.**\n\nThe commands are loosely inspired from http://meetbot.debian.net/Manual.html\n\nCommands prefixed by `.` are here taking in account we use the `.` as hubot prefix, just replace it with your prefix if it is different. Uncommented commands are just not yet implemented.\n\n    .meet\n        give the name of the ongoing meeting on the given channel\n        or warns that there is no ongoing meeting at the moment\n\n    .meet start [<label>]\n    .meet on [<label>]\n    .startmeeting [<label>]\n        starts a meeting with given <label> name\n        if no label is provided, it will be named after the hour of start of the meeting\n        perms: admin only\n\n    .meet end\n    .meet close\n    .meet off\n    .endmeeting\n        closes a meeting\n        An event meetbot.notes will be triggered at the end of the meeting, \n        so you can code whatever you want to do with the meeting notes in your custom bot\n        perms: admin only\n\n    .meet topic <topic>\n        Sets the topic for the meeting\n        perms: admin only\n\n    .meet agree info<text>\n    .agreed <text>\n    .agree <text>\n        Mark something as agreed on. The rest of the line is the details\n        perms: admin only\n\n    .meet info info<text>\n    .info <text>\n        Add an INFO item to the minutes\n\n    .meet action <text>\n    .action <text>\n        Add an ACTION item to the minutes\n\n\nTesting\n----------------\n\n    npm install\n\n    # will run make test and coffeelint\n    npm test \n    \n    # or\n    make test\n    \n    # or, for watch-mode\n    make test-w\n\n    # or for more documentation-style output\n    make test-spec\n\n    # and to generate coverage\n    make test-cov\n\n    # and to run the lint\n    make lint\n\n    # run the lint and the coverage\n    make\n\nChangelog\n---------------\nAll changes are listed in the [CHANGELOG](CHANGELOG.md)\n\nAuthors\n------------\n- [@mose](https://github.com/mose) - author and maintainer\n\nLicense\n-------------\nThis source code is available under [MIT license](LICENSE).\n\nCopyright\n-------------\nCopyright (c) 2017 - Mose - http://mose.com\n","maintainers":[{"name":"mose","email":"mose@mose.com"}],"time":{"modified":"2017-12-27T19:17:06.968Z","created":"2017-12-27T19:17:06.968Z","0.0.1":"2017-12-27T19:17:06.968Z"},"homepage":"https://github.com/mose/hubot-meetbot","keywords":["hubot","hubot-scripts"],"repository":{"type":"git","url":"git://github.com/mose/hubot-meetbot.git"},"author":{"name":"mose","email":"mose@mose.com","url":"https://github.com/mose"},"bugs":{"url":"https://github.com/mose/hubot-meetbot/issues"},"license":"MIT","readmeFilename":"README.md"}
