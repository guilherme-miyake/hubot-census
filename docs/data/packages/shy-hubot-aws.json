{"_id":"shy-hubot-aws","_rev":"1-47499c0ae828e08fc80fa94ac8491c04","name":"shy-hubot-aws","description":"Hubot masters aws commands","dist-tags":{"latest":"0.5.0"},"versions":{"0.5.0":{"name":"shy-hubot-aws","version":"0.5.0","description":"Hubot masters aws commands","repository":{"type":"git","url":"git+ssh://git@github.com/yoheimuta/hubot-aws.git"},"main":"index.coffee","scripts":{"test":"grunt test"},"dependencies":{"aws-sdk":"2.4.1","tsv":"0.2.0","async":"0.9.0","underscore":"1.8.3","cson":"3.0.1","moment":"2.13.0"},"keywords":["aws","hubot","hubot-scripts","hubot aws","hubot-aws","aws-cli"],"bugs":{"url":"https://github.com/yoheimuta/hubot-aws/issues"},"author":{"name":"msmichellegar","email":"msmichellegar@gmail.com"},"license":"MIT","devDependencies":{"coffee-errors":"^0.8.6","coffee-script":"^1.10.0","coffeelint":"^1.13.0","grunt-coffeelint":"0.0.13","grunt-contrib-watch":"^0.6.1","grunt-jsonlint":"^1.0.4","grunt-notify":"^0.4.1","grunt-release":"^0.13.0","grunt-simple-mocha":"^0.4.0","matchdep":"^1.0.0","sinon":"^1.17.1"},"gitHead":"b8d85336357dc00ddd7e7199cfd5001f8ab83494","homepage":"https://github.com/yoheimuta/hubot-aws#readme","_id":"shy-hubot-aws@0.5.0","_shasum":"72c9f0a520f5d73279f977949816236c4659d2e7","_from":".","_npmVersion":"3.10.3","_nodeVersion":"6.5.0","_npmUser":{"name":"msmichellegar","email":"msmichellegar@gmail.com"},"dist":{"shasum":"72c9f0a520f5d73279f977949816236c4659d2e7","tarball":"http://registry.npmjs.org/shy-hubot-aws/-/shy-hubot-aws-0.5.0.tgz"},"maintainers":[{"name":"msmichellegar","email":"msmichellegar@gmail.com"}],"_npmOperationalInternal":{"host":"packages-12-west.internal.npmjs.com","tmp":"tmp/shy-hubot-aws-0.5.0.tgz_1480422841642_0.8552779492456466"}}},"readme":"# hubot-aws  [![npm version](https://badge.fury.io/js/hubot-aws.svg)](http://badge.fury.io/js/hubot-aws) [![Build Status](https://travis-ci.org/yoheimuta/hubot-aws.svg?branch=master)](https://travis-ci.org/yoheimuta/hubot-aws) [![Dependency Status](https://david-dm.org/yoheimuta/hubot-aws.svg)](https://david-dm.org/yoheimuta/hubot-aws)\n\nHubot masters aws commands\n\nI wrote a guest blog published by PacktPub about a quick intro to this npm module.\nSee https://www.packtpub.com/books/content/part2-chatops-slack-and-aws-cli.\n\n## Installation\n\nAdd **hubot-aws** to your `package.json` file:\n\n```\nnpm install --save hubot-aws\n```\n\nAdd **hubot-aws** to your `external-scripts.json`:\n\n```json\n[\"hubot-aws\"]\n```\n\nRun `npm install`\n\n## Auth\n\nAccess Control with [hubot-auth](https://github.com/hubot-scripts/hubot-auth).\n\n- User with `admin` or the role defined `HUBOT_AWS_CAN_ACCESS_ROLE` can run all commands.\n\n```ruby\n# against user without a valid role\nhubot> hubot ec2 run\nYou cannot access this feature. Please contact an admin.\n```\n\n- You can disable access control like below.\n\n```ruby\nexport HUBOT_AWS_DEBUG=\"1\"\n```\n\n## Commands\n\nSee [scripts/**.coffee](https://github.com/yoheimuta/hubot-aws/tree/master/scripts) for full documentation.\n\n```ruby\nhubot autoscaling create # Create an AutoScaling Group\nhubot autoscaling delete --group_name=[group_name] # Delete the AutoScaling Group\nhubot autoscaling delete --group_name=[group_name] --force # Delete the AutoScaling Group with live instances\nhubot autoscaling launch create # Create an AutoScaling LaunchConfiguration\nhubot autoscaling launch delete --name=[launch_configuration_name] # Delete the AutoScaling LaunchConfiguration\nhubot autoscaling launch ls # Displays all AutoScaling LaunchConfigurations\nhubot autoscaling launch ls --name=[launch_configuration_name] # Details an Autoscaling LaunchConfiguration\nhubot autoscaling ls # Displays all AutoScaling Groups\nhubot autoscaling ls --name=[group_name] # Details an Autoscaling Group\nhubot autoscaling notification delete --group_name=[group_name] --arn=[topic_arn] # Delete the AutoScaling Notificatoin\nhubot autoscaling notification ls # Displays all AutoScaling NotificationConfigurations\nhubot autoscaling notification ls --group_name=[group_name] # Details an Autoscaling NotificationConfiguration\nhubot autoscaling notification put # Put an AutoScaling Notifications\nhubot autoscaling policy delete --policy_name=[policy_name] # Delete the AutoScaling Policy\nhubot autoscaling policy ls # Displays all AutoScaling Policies\nhubot autoscaling policy ls --group_name=[group_name] # Details an Autoscaling Policy\nhubot autoscaling policy put --add # Put an AutoScaling ScaleOut Policy\nhubot autoscaling policy put --remove # Put an AutoScaling ScaleIn Policy\nhubot autoscaling update --json=[json] # Update the AutoScaling Group\nhubot autoscaling update --json=[json] --dry-run # Try updating the AutoScaling Group\nhubot autoscaling update --name=[name] --desired=[desired] # Update DesiredCapacity the AutoScaling Group\nhubot autoscaling update --name=[name] --desired=[desired] --dry-run # Try updating DesiredCapacity the AutoScaling Group\nhubot autoscaling update --name=[name] --max=[max] # Update MaxSize of the AutoScaling Group\nhubot autoscaling update --name=[name] --max=[max] --dry-run # Try updating MaxSize of the AutoScaling Group\nhubot autoscaling update --name=[name] --min=[min] # Update MinSize of the AutoScaling Group\nhubot autoscaling update --name=[name] --min=[min] --dry-run # Try updating MinSize of the AutoScaling Group\nhubot autoscaling schedule delete --schedule_name=[policy_name] # Delete the AutoScaling Scheduled Action\nhubot autoscaling schedule ls # Displays all AutoScaling Scheduled Actions\nhubot autoscaling schedule ls --group_name=[group_name] # Details an Autoscaling Scheduled Actions\nhubot autoscaling schedule put # Put an AutoScaling Scheduled Action\nhubot cloudwatch alarm delete --name=[alarm_name] # Delete the Alarm\nhubot cloudwatch alarm ls # Displays all Alarms\nhubot cloudwatch alarm ls --name=[alarm_name] # Details an Alarm\nhubot ec2 ami create --instance_id=*** # Create an ami.\nhubot ec2 ami deregister --ami_id=[ami_id] # Deregisters the specified AMI\nhubot ec2 ami ls # Desplays all AMI(Images)\nhubot ec2 ls # Displays all Instances\nhubot ec2 ls --instance_id=[instance_id] # Details an Instance\nhubot ec2 ls --instance_filter=[instance_name] # Instances that contain instance_name in name\nhubot ec2 run # Run an Instance\nhubot ec2 sg create --group_name=[group_name] --desc=[desc] --vpc_id=[vpc_id] # Create a SecurityGroup\nhubot ec2 sg delete --group_id=[group_id] # Delete the SecurityGroup\nhubot ec2 sg ls # Desplays all SecurityGroups\nhubot ec2 spot ls # Displays all SpotInstances\nhubot ec2 tag create --resource_id=*** --tag_key=*** --tag_value=*** # Create a tag.\nhubot ec2 tag delete --resource_id=*** # Deletes the specified set of tags\nhubot ec2 tag ls # Desplays all tags\nhubot ec2 terminate --instance_id=[instance_id] # Terminate the Instance\nhubot s3 ls # Displays all S3 buckets\nhubot s3 ls --bucket_name=[bucket-name] # Displays all objects\nhubot s3 ls --bucket_name=[bucket-name] --prefix=[prefix] # Displays all objects with prefix\nhubot s3 ls --bucket_name=[bucket-name] --prefix=[prefix] --marker=[marker] # Displays all objects with prefix from marker\nhubot sns list topics\nhubot sns list subscriptions\nhubot sns list subscription in [topicArn]\nhubot sns publish [message] to [topicArn]\n```\n\n## Configurations\n\nSet environment variables like an example below.\n\n```ruby\n# required\nexport HUBOT_AWS_ACCESS_KEY_ID=\"ACCESS_KEY\"\nexport HUBOT_AWS_SECRET_ACCESS_KEY=\"SECRET_ACCESS_KEY\"\nexport HUBOT_AWS_REGION=\"ap-northeast-1\"\n# required when used\nexport HUBOT_AWS_DEBUG=\"1\"\nexport HUBOT_AWS_CAN_ACCESS_ROLE=\"tech\"\n## allow json and cson fileformat as each api config\nexport HUBOT_AWS_EC2_RUN_CONFIG=\"files/aws/ec2/run/app.json\"\nexport HUBOT_AWS_EC2_RUN_USERDATA_PATH=\"files/aws/ec2/run/initfile\"\nexport HUBOT_AWS_EC2_CREATE_AMI_CONFIG=\"files/aws/ec2/create_ami/app.cson\"\nexport HUBOT_AWS_AS_LAUNCH_CONF_CONFIG=\"files/aws/autoscaling/create_launch_configuration/app.cson\"\nexport HUBOT_AWS_AS_LAUNCH_CONF_USERDATA_PATH=\"files/aws/autoscaling/create_launch_configuration/initfile\"\nexport HUBOT_AWS_AS_GROUP_CONFIG=\"files/aws/autoscaling/create_group/app.cson\"\nexport HUBOT_AWS_AS_POLICY_ADD=\"files/aws/autoscaling/put_policy/add/app.cson\"\nexport HUBOT_AWS_AS_POLICY_REMOVE=\"files/aws/autoscaling/put_policy/remove/app.cson\"\nexport HUBOT_AWS_AS_NOTIFICATION=\"files/aws/autoscaling/put_notification/app.cson\"\nexport HUBOT_AWS_CW_ALARM_ADD=\"files/aws/cloudwatch/put_metric_alarm/add/app.cson\"\nexport HUBOT_AWS_CW_ALARM_REMOVE=\"files/aws/cloudwatch/put_metric_alarm/remove/app.cson\"\n```\n\nYou can build your own configurations by referring to the [example files](https://github.com/yoheimuta/hubot-aws/tree/master/example).\n\n## Examples\n\n### EC2\n\nhubot ec2 ls - Displays all Instances\n\n```ruby\nhubot> hubot ec2 ls\nFetching ...\nhubot> time     state   id      image   az      subnet  type    ip      name\n2015-04-17 17:02:27+09:00       running i-25588ed0      ami-AAA    ap-northeast-1c subnet-AAA t2.micro        10.0.2.125      app-autoscaling-ondemand\n2015-04-17 17:05:40+09:00       running i-f6469003      ami-BBB    ap-northeast-1c subnet-BBB t2.micro        10.0.2.146      app-autoscaling\n```\n\nhubot ec2 run - Run an Instance\n\n```ruby\nhubot> hubot ec2 run\nRequesting dry-run=false...\nhubot> pending  i-e23ce817      t2.micro       172.31.19.69    undefined\n```\n\nhubot ec2 terminate --instance_id=[instance_id] - Terminate the Instance\n\n```ruby\nhubot> hubot ec2 terminate --instance_id=i-e23ce817\nTerminating i-e23ce817...\nhubot> i-e23ce817    shutting-down\n```\n\n### AutoScaling\n\nhubot autoscaling launch ls - Displays all AutoScaling LaunchConfigurations\n\n```ruby\nhubot> hubot autoscaling launch ls\nFetching ...\nhubot> time     name    image   type    price   security\n2015-04-17 15:31:17+09:00       app-20150417     ami-AAA    c3.xlarge       1.000   sg-AAA\n2015-04-17 16:07:29+09:00       app-20150417-ondemand    ami-BBB    c3.xlarge       [NoPrice]       sg-BBB\n```\n\nhubot autoscaling launch create --name=[launch_configuration_name] - Create an AutoScaling LaunchConfiguration\n\n```ruby\nhubot> hubot autoscaling launch create --name=app-20150417\nRequesting app...\nhubot> { ResponseMetadata: { RequestId: '68e4734f-e4d0-11e4-8995-AAA' } }\n```\n\nhubot autoscaling ls - Displays all AutoScaling Groups\n\n```ruby\nhubot> hubot autoscaling ls\nFetching ...\nhubot> time     current_size    desired_size    min_size        max_size        az      elb     conf    name\n        tag.Key tag.Value\n---------------------------------------------------------------------------------------------------------------------------------\n---------------------------------------------------------------------------------------------------------------------------------\n2015-04-17 15:42:00+09:00       5      5      1       1000      ap-northeast-1a app-elb  app-20150417     app-group-20150417\n        Name    app-autoscaling\n        role    app\n2015-04-17 16:10:02+09:00       2       2       1       500      ap-northeast-1a app-elb  app-20150417-ondemand    app-group-20150417-ondemand\n        Name    app-autoscaling-ondemand\n        role    app\n```\n\nhubot autoscaling create --name=[group_name] --launch_name=[launch_configuration_name] - Create an AutoScaling Group\n\n```ruby\nhubot> hubot autoscaling create --name=app-group-20150417 --launch_name=app-20150417\nRequesting name=app-group-20150417, conf=app-20150417...\nhubot> { ResponseMetadata: { RequestId: 'd9f1a0ee-e4cc-11e4-9d11-AAA' } }\n```\n\nhubot autoscaling update --name=[name] --desired=[desired] - Update DesiredCapacity the AutoScaling Group\n\n```ruby\nhubot> hubot autoscaling update --name=app-group-20150417 --desired=9\nRequesting AutoScalingGroupName=app-group-20150417, DesiredCapacity=9...\nhubot> { ResponseMetadata: { RequestId: '590e22f0-e4cb-11e4-a03d-AAA' } }\n```\n\nhubot autoscaling policy ls - Displays all AutoScaling Policies\n\n```ruby\nhubot> hubot autoscaling policy ls\nFetching ...\nhubot> name     type    adjustment      cooldown        group_name\n        time    namespace       metric  statistic       threshold       period  operator        alarm_name\n---------------------------------------------------------------------------------------------------------------------------------\n---------------------------------------------------------------------------------------------------------------------------------\n\nAdd     ChangeInCapacity        2       300     app-group-20150417\n        2015-04-23 21:50:46+09:00       AWS/EC2 CPUUtilization  Average 45      900     GreaterThanOrEqualToThreshold   awsec2-app-group-20150417-CPU-Utilization\n\nRemove  ChangeInCapacity        -1      [NoValue]       app-group-20150417\n        2015-04-23 21:50:47+09:00       AWS/EC2 CPUUtilization  Average 30      900     LessThanOrEqualToThreshold      awsec2-app-group-20150417-High-CPU-Utilization\n```\n\nhubot autoscaling policy put --add --group_name=[group_name]    - Put an AutoScaling ScaleOut Policy\n\n```ruby\nhubot> hubot autoscaling policy put --add --group_name=app-group-20150417\nRequesting add policy, AutoScalingGroupName=app-group-20150417, dry-run=false...\nhubot> { ResponseMetadata: { RequestId: 'c7c33a7b-e822-11e4-bd7f-AAA' },\n      PolicyARN: 'arn:aws:autoscaling:ap-northeast-1:AAA:scalingPolicy:e8f4b6cb-9d86-4b89-b475-AAA:autoScalingGroupName/app-group-20150417:policyName/Add' }\n{ ResponseMetadata: { RequestId: 'c88c7e44-e822-11e4-b90d-AAA' } }\n```\n\nhubot autoscaling policy put --remove --group_name=[group_name] - Put an AutoScaling ScaleIn Policy\n\n```ruby\nhubot> hubot autoscaling policy put --remove --group_name=app-group-20150417\nRequesting remove policy, AutoScalingGroupName=app-group-20150417, dry-run=false...\nhubot> { ResponseMetadata: { RequestId: '14992ecb-e823-11e4-9c53-b9547125f053' },\n      PolicyARN: 'arn:aws:autoscaling:ap-northeast-1:199839016800:scalingPolicy:86f364a3-b495-4d86-a17b-ad539177f021:autoScalingGroupName/app-group-20150417:policyName/Remove' }\n```\n\nhubot autoscaling notification ls - Displays all AutoScaling NotificationConfigurations\n\n```ruby\nhubot> hubot autoscaling notification ls\nFetching ...\nhubot> name     type    topic_arn\napp-group-20150417       autoscaling:EC2_INSTANCE_LAUNCH arn:aws:sns:ap-northeast-1:AAA:autoscaling-notice\napp-group-20150417       autoscaling:EC2_INSTANCE_TERMINATE      arn:aws:sns:ap-northeast-1:AAA:autoscaling-notice\napp-group-20150417       autoscaling:EC2_INSTANCE_TERMINATE_ERROR        arn:aws:sns:ap-northeast-1:AAA:autoscaling-notice\napp-group-20150417       autoscaling:EC2_INSTANCE_LAUNCH_ERROR   arn:aws:sns:ap-northeast-1:AAA:autoscaling-notice\n```\n\nhubot autoscaling notification put --group_name=[group_name]   - Put an AutoScaling Notifications\n\n```ruby\nhubot> hubot autoscaling notification put --group_name=app-group-20150417\nRequesting notifications, AutoScalingGroupName=app-group-20150417, dry-run=false...\nhubot> { ResponseMetadata: { RequestId: '9b764201-e4cb-11e4-bb52-AAA' } }\n```\n\n### Cloudwatch\n\nhubot cloudwatch alarm ls - Displays all Alarms\n\n```ruby\nhubot> hubot cloudwatch alarm ls\nFetching ...\nhubot> time    namespace    metric    statistic    threshold    period    operator    name\ndimension.Name    dimension.Value\n---------------------------------------------------------------------------------------------------------------------------------\n---------------------------------------------------------------------------------------------------------------------------------\n\n2014-12-12 14:05:49+09:00    AWS/EC2    CPUUtilization    Average    30    3600    LessThanOrEqualToThreshold    awsec2-app-group-20141209-High-CPU-Utilization\n    AutoScalingGroupName    app-group-20141209\n\n2014-12-19 12:15:07+09:00    AWS/EC2    CPUUtilization    Average    30    21600    LessThanOrEqualToThreshold    awsec2-app-autoscaling-20141219-High-CPU-Utilization\n    AutoScalingGroupName    app-autoscaling-20141219\n```\n\n### S3\n\nhubot s3 ls - Displays all S3 buckets\n\n```ruby\nhubot> hubot s3 ls\nFetching ...\nhubot> time    name\n2014-08-05 14:59:21+09:00    app\n2014-08-05 17:39:45+09:00    app-images\n```\n\nhubot s3 ls --bucket_name=[bucket-name] --prefix=[prefix] - Displays all objects with prefix\n\n```ruby\nhubot> hubot s3 ls --bucket_name=app-images --prefix=images/\nFetching app-images, images/, ...\nhubot> Prefix\nimages/000e90ea2e01b830a8d6cd68a10b3e5becdd8a98e41b402a9da3ad97eda1332e/\nimages/001c03788ee31167872d38ce09493a4deb1cbe11728a762065ee1a5acfd1404b/\n...\n```\n\n### SNS\n\n#### Configuring\n\nIn addition to administration of SNS, hubot-aws can also receive push notifications.\n\n* Create a new SNS topic\n* Create a subscription and choose HTTP(S). The default configuration is http://<huboturl>:8080/hubot/sns\n    * The URL can be set using HUBOT_SNS_URL\n* Set HUBOT_SNS_JID to hubot's jabber ID\n\nYou should see the subscription ID change from PendingConfirmation to a valid subscription id.\n\n#### Receiving Messages\n\nUse the Subject property to set which room the message should be delivered in, usually its JID. Messages can be raw or JSON format, but JSON is preferred.\nIf you are using [hubot-hipchat](https://github.com/hipchat/hubot-hipchat) use the plain old room name for the Subject.\nThe Subject property does not accept multiple rooms. Additionally the Messages does not natively process html templates, but one could implement it.\n\n#### Sending Messages\n\n`hubot-aws` does not send the message to a chat room. This is due to the myriad of adapters and clients hubot supports.\nTo process a message and send it to your chat room, hook into the `sns:notification` event.\n\n```\n# Use this snippet in your own scripts to send messages to the chat room from SNS\nrobot.on 'sns:notification', (message) ->\n  # if using HipChat the channelID function converts the common name to the room JID\n  robot.messageRoom sns.channelID(message.subject), message.message\n  # if using another adapter\n    robot.messageRoom message.subject, message.message\n```\n\n## Recommended Usage\n\n### Use `--dry-run`\n\n```ruby\nhubot> hubot ec2 run --dry-run\nRequesting dry-run=true...\n{ MinCount: 1,\n  MaxCount: 1,\n  DryRun: false,\n  ImageId: 'ami-AAA',\n  KeyName: 'aws',\n  InstanceType: 't2.micro',\n  Placement: { AvailabilityZone: 'ap-northeast-1a' },\n  NetworkInterfaces:\n   [ { Groups: [ 'sg-AAA' ],\n       SubnetId: 'subnet-AAA',\n       DeviceIndex: 0,\n       AssociatePublicIpAddress: true } ],\n  UserData: 'IyEvYmluL2Jhc2gKCiMgc2V0dXAgc3RhcnQgbm90aWZ5CkhPU1RfTkFNRT1gaG9zdG5hbWVgCg...\n\n# Then, remove --dry-run option\nhubot> hubot ec2 run\n...\n```\n\n### Use [hubot-env](https://github.com/yoheimuta/hubot-env)\n\nYou can switch environment variables about AWS Account Credentials via hubot command dynamically, if you want to manage multi accounts.\n\n```ruby\n# Load new environment variables abount AWS credentials of account 1.\nhubot> hubot env load --filename=aws-cred-account1.env\nLoading env --filename=aws-cred-account1.env, --dry-run=false...\nHUBOT_AWS_CREDENTIALS=account1\nHUBOT_AWS_ACCESS_KEY_ID=ACCESS_KEY1\nHUBOT_AWS_SECRET_ACCESS_KEY=***\nHUBOT_AWS_REGION=ap-northeast-1\n\n# Then, Switch to overwrite environment variables abount AWS credentials of account 2.\nhubot> hubot env load --filename=aws-cred-account2.env\nLoading env --filename=aws-cred-account2.env, --dry-run=false...\nHUBOT_AWS_CREDENTIALS=account2\nHUBOT_AWS_ACCESS_KEY_ID=ACCESS_KEY2\nHUBOT_AWS_SECRET_ACCESS_KEY=***\nHUBOT_AWS_REGION=ap-northeast-1\n```\n\n### Use [hubot-hint](https://github.com/yoheimuta/hubot-hint)\n\n`hubot-aws`supports many commands and some commands require multi arguments.\n`hubot-hint` shows rest of command help.\n\n```ruby\n# Search commandHelps with `autoscaling launch`\nhubot> hubot autoscaling launch hint\nhubot>\nhubot autoscaling launch create --name=[launch_configuration_name] # Create an AutoScaling LaunchConfiguration\nhubot autoscaling launch create --name=[launch_configuration_name] --dry-run # Try creating an AutoScaling LaunchConfiguration\nhubot autoscaling launch delete --name=[launch_configuration_name] # Delete the AutoScaling LaunchConfiguration\nhubot autoscaling launch ls # Displays all AutoScaling LaunchConfigurations\nhubot autoscaling launch ls --name=[launch_configuration_name] # Details an Autoscaling LaunchConfiguration\n\n# Search commandHelps with `autoscaling launch create`\nhubot> hubot autoscaling launch create hint\nhubot>\nhubot autoscaling launch create --name=[launch_configuration_name] # Create an AutoScaling LaunchConfiguration\nhubot autoscaling launch create --name=[launch_configuration_name] --dry-run # Try creating an AutoScaling LaunchConfiguration\n```\n","maintainers":[{"name":"msmichellegar","email":"msmichellegar@gmail.com"}],"time":{"modified":"2016-11-29T12:34:03.502Z","created":"2016-11-29T12:34:03.502Z","0.5.0":"2016-11-29T12:34:03.502Z"},"homepage":"https://github.com/yoheimuta/hubot-aws#readme","keywords":["aws","hubot","hubot-scripts","hubot aws","hubot-aws","aws-cli"],"repository":{"type":"git","url":"git+ssh://git@github.com/yoheimuta/hubot-aws.git"},"author":{"name":"msmichellegar","email":"msmichellegar@gmail.com"},"bugs":{"url":"https://github.com/yoheimuta/hubot-aws/issues"},"license":"MIT","readmeFilename":"README.md"}
