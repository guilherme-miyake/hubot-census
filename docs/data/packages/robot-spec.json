{"_id":"robot-spec","_rev":"2-9524cbf125e3f92904ee56f78c9cded9","name":"robot-spec","description":"customize robot events hear and response. apply robot and spec.","dist-tags":{"latest":"0.1.1"},"versions":{"0.1.0":{"name":"robot-spec","version":"0.1.0","description":"customize robot events hear and response. apply robot and spec.","main":"lib/index.js","scripts":{"test":"echo \"Error: no test specified\" && exit 1"},"keywords":["hubot","robot","direct","daab"],"author":{"name":"L is B corp."},"license":"MIT","bugs":{"url":"https://github.com/lisb/robot-spec/issues"},"homepage":"https://github.com/lisb/robot-spec","gitHead":"6c4b72169a6bd162e30f783ef6676410aa1d0cf1","_id":"robot-spec@0.1.0","_shasum":"0cd1eebae1061b4a998c37eb214c2f39a2ffbae1","_from":".","_npmVersion":"4.2.0","_nodeVersion":"7.9.0","_npmUser":{"name":"lisb","email":"info@l-is-b.com"},"dist":{"shasum":"0cd1eebae1061b4a998c37eb214c2f39a2ffbae1","tarball":"https://registry.npmjs.org/robot-spec/-/robot-spec-0.1.0.tgz"},"maintainers":[{"name":"lisb","email":"info@l-is-b.com"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/robot-spec-0.1.0.tgz_1508463373469_0.1695765086915344"}},"0.1.1":{"name":"robot-spec","version":"0.1.1","description":"customize robot events hear and response. apply robot and spec.","main":"lib/index.js","scripts":{"test":"echo \"Error: no test specified\" && exit 1"},"keywords":["hubot","robot","direct","daab"],"author":{"name":"L is B corp."},"license":"MIT","bugs":{"url":"https://github.com/lisb/robot-spec/issues"},"homepage":"https://github.com/lisb/robot-spec","gitHead":"cdd52e14bf65852f071e09286e13f68defa35499","_id":"robot-spec@0.1.1","_shasum":"bbe9be56098711d43eea6183e485113926334eb9","_from":".","_npmVersion":"4.2.0","_nodeVersion":"7.9.0","_npmUser":{"name":"lisb","email":"info@l-is-b.com"},"dist":{"shasum":"bbe9be56098711d43eea6183e485113926334eb9","tarball":"https://registry.npmjs.org/robot-spec/-/robot-spec-0.1.1.tgz"},"maintainers":[{"name":"lisb","email":"info@l-is-b.com"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/robot-spec-0.1.1.tgz_1508465483769_0.8546069909352809"}}},"readme":"# RobotSpec\nメッセージ受信イベントの正規表現の省略や、受信したテキストメッセージ内容の取得を容易に行うことができるdaab開発の為のパッケージ\n---\n\n## Requre\nnode6+  \n\n\n## Usage\n\n・メッセージ内容の簡易取得\n\n`scripts/app.js`  \n\n```js\nconst RobotSpec = require('robot-spec');\n\n\nmodule.exports = (robot) => {\n\n  const robot2 = new RobotSpec(robot);\n\n  robot2.hear(/PING$/i, ({ res, msg }) => {\n    res.send('.PONG > ' + msg);\n  });\n\n  robot2.hear('text', ({ res, msg }) => {\n    res.send('.TEXT > ' + msg);\n  });\n\n  robot2.hear('select', ({ res }) => {\n    res.send('.SELECT-STAMP ');\n  });\n\n  robot2.respond(/ECHO (.*)_(.*)/i, ({ res, msg, msgs }) => {\n    res.send('.ECHO INPUT >\\n' + msgs.join('\\n'));\n  });\n\n};\n```\n\n・メソッドのキャッシュと呼び出し\n\n`scripts/app.js`  \n\n```js\nconst RobotSpec = require('robot-spec');\n\n\nmodule.exports = (robot) => {\n\n  const robot2 = new RobotSpec(robot).config();\n  const spec = robot2.spec;\n\n\n  robot2.hear('text', ({ res, msg }) => spec.scenario.textReceive({ res, msg }));\n  robot2.hear('select', ({ res }) => spec.scenario.selectReceive({ res }));\n  robot2.hear('stamp', ({ res }) => spec.scenario.stampReceive({ res }));\n\n  robot.hear(/PING$/i, (res) => {\n    res.send('PONG');\n  });\n\n  robot2.respond(/TEST (.*)_(.*)/i, ({ res, msg, msgs }) => {\n    res.send('test!\\n' + msgs.join('\\n'));\n  });\n\n  robot2.hear(/TEST (.*)_(.*)/i, ({ res, msg, msgs }) => {\n    res.send('test!!\\n' + msgs.join('\\n'));\n    console.log(msg, msgs);\n  });\n\n};\n```\n\n・メソッドの初期化を行う（constructorの実行）\n\n`initialize`  \n\n```js\nconst robot2 = new RobotSpec(robot).config().initialize();\nconst spec = robot2.spec;\n```\n\n\n\n## robot2.spec\n\nキャッシュしたメソッドの利用\n\n`scripts/app.js`  \n\n```js\nconst robot2 = new RobotSpec(robot).config();\nconst spec = robot2.spec;\n\nspec.scenario.method();\n// or\nrobot2.hear('stamp', ({ res }) => spec.scenario.method());\n```\n\n別のモジュールではもう一度呼び出して使用することも可能\n\n```js\nconst spec = require('robot-spec').Spec();\n\nspec.scenario.method();\n```\n\n\n\n## コンポーネント設定\n\nディレクトリ構造\n\n```tree\nscripts/app.js\nsrc\n├── components.js\n```\n\nコアメソッドのキャッシュ  \n\n`src/components.js`  \n\n```js\n'use strict';\n\nconst components = (robot, config) => ({\n  robot,\n  config,\n\n  // scenario\n  scenario: './scenario/common',\n  task:     './scenario/task'\n});\n\nmodule.exports = components;\n```\n\n\n## cache method\n\nメソッドのキャッシュ  \n\nディレクトリ構造  \n\n```tree\nscripts/app.js\nsrc\n├── scenario\n│   ├── common\n│   │   ├── index.js // *\n│   │   ├── join-home.js\n│   │   ├── select-action-admin.js\n│   │   ├── select-receive.js\n│   │   ├── stamp-receive.js\n│   │   ├── text-action-admin.js\n│   │   └── text-receive.js\n```\n\n`scenario/common/index.js`\n\n```js\n'use strict';\n\nclass Common {\n\n  constructor(components) {\n    components.mixin(this, __dirname, {\n      joinHome:             './join-home',\n      selectActionAdmin:    './select-action-admin',\n      selectReceive:        './select-receive',\n      stampReceive:         './stamp-receive',\n      textActionAdmin:      './text-action-admin',\n      textReceive:          './text-receive',\n    });\n  }\n\n}\n\nmodule.exports = Common;\n```\n\nクラス  \n\n```js\n'use strict';\n\nclass Schedules {\n\n  constructor(spec) {\n    this.spec = spec;\n  }\n\n  add(args) {\n    return this.spec.apiSchedule.add(args);\n  }\n}\n\nmodule.exports = Schedules;\n\n```\n\n\n\nメソッド  \n\n`scenario/common/join-home.js`  \n\n```js\n'use strict';\n\nconst joinHome = ({ messages }) => {\n  return ({ res }) => {\n\n    return messages.joinUser({ res });\n  };\n};\n\nmodule.exports = joinHome;\n```\n\nクラス、メソッド共にモジュールから読み込む方法でも可能\n\n(再掲)  \n```js\nconst spec = require('robot-spec').Spec();\n\nspec.scenario.method();\n```\n\n\nクラス、メソッドのキャッシュ  \n\n`scripts/app.js`  \n\n## メソッドのディレクトリ設定\n\n```js\nnew RobotSpec(robot).config(opts);\n```\n\n`opts`の設定を変更することで、各設置ディレクトリの変更が可能です。  \n\n\n`opts`  \n\nデフォルト  \n\n```js\nopts = {\n  root: 'src/',\n  config: 'src/config',\n  components: 'src/components'\n};\n```\n\n`config.js`は定数を定義し、グローバル利用できます。  \n利用しない場合は、`false`を設定します。\n\n```js\nopts = {\n  root: 'src/',\n  config: false,\n  components: 'src/components'\n};\n```\n\n`config.js`を利用し、`components.js`(メソッドキャッシュ)を利用しない場合は、  \n下記のように、`components`に`false`を設定します。  \n\n```js\nopts = {\n  root: 'src/',\n  config: 'src/config',\n  components: false\n};\n```\n\nまたは、`components`のみ設定します。\n\n\n```js\nopts = {\n  components: false\n};\n```\n\n\nグローバル定数\n\n`src/config.js`  \n\n```\nconst g = {};\n\ng.ADMIN_USER = 'xxxxxxxx';\ng.ADMIN_PASS = 'xxxxxxxx';\n\nmodule.exports = g;\n```\n","maintainers":[{"name":"lisb","email":"info@l-is-b.com"}],"time":{"modified":"2017-10-20T02:11:23.874Z","created":"2017-10-20T01:36:13.588Z","0.1.0":"2017-10-20T01:36:13.588Z","0.1.1":"2017-10-20T02:11:23.874Z"},"homepage":"https://github.com/lisb/robot-spec","keywords":["hubot","robot","direct","daab"],"author":{"name":"L is B corp."},"bugs":{"url":"https://github.com/lisb/robot-spec/issues"},"license":"MIT","readmeFilename":"README.md"}
