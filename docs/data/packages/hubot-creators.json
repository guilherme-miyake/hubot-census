{"_id":"hubot-creators","_rev":"4-bb986111d472baad0a7365611c2ab11e","name":"hubot-creators","description":"Hubot Creators Adapter","dist-tags":{"latest":"0.0.8"},"versions":{"0.0.1":{"name":"hubot-creators","version":"0.0.1","author":{"name":"Creators","url":"http://creators.co/"},"contributors":[{"name":"Rafael Caferati","email":"rafael@caferati.me"}],"description":"Hubot Creators Adapter","keywords":["hubot","adapter","chat"],"licenses":[{"type":"MIT","url":"http://opensource.org/licenses/mit-license.php"}],"repository":{"type":"git","url":"https://github.com/rcaferati/hubot-creators.git"},"devDependencies":{"coffee-script":"~1.7.1"},"main":"./src/rocketchat","dependencies":{"asteroid":"^0.6.1","parent-require":"^1.0.0","q":"^1.4.1"},"gitHead":"3e04f5a297811cae1713ab0f09bd5e4427d4b01b","bugs":{"url":"https://github.com/rcaferati/hubot-creators/issues"},"homepage":"https://github.com/rcaferati/hubot-creators","_id":"hubot-creators@0.0.1","scripts":{},"_shasum":"affc24f7aa0d0d4343cbb1fe85f2919abc57e4a4","_from":".","_npmVersion":"3.3.6","_nodeVersion":"5.0.0","_npmUser":{"name":"rcaferati","email":"rafael@caferati.me"},"dist":{"shasum":"affc24f7aa0d0d4343cbb1fe85f2919abc57e4a4","tarball":"https://registry.npmjs.org/hubot-creators/-/hubot-creators-0.0.1.tgz"},"maintainers":[{"name":"rcaferati","email":"rafael@caferati.me"}],"directories":{}},"0.0.2":{"name":"hubot-creators","version":"0.0.2","author":{"name":"Creators","url":"http://creators.co/"},"contributors":[{"name":"Rafael Caferati","email":"rafael@caferati.me"}],"description":"Hubot Creators Adapter","keywords":["hubot","adapter","chat"],"licenses":[{"type":"MIT","url":"http://opensource.org/licenses/mit-license.php"}],"repository":{"type":"git","url":"https://github.com/rcaferati/hubot-creators.git"},"devDependencies":{"coffee-script":"~1.7.1"},"main":"./src/rocketchat","dependencies":{"asteroid":"^0.6.1","parent-require":"^1.0.0"},"gitHead":"30506286e73ef15d6e3d76b6abc7547fe12dabe3","bugs":{"url":"https://github.com/rcaferati/hubot-creators/issues"},"homepage":"https://github.com/rcaferati/hubot-creators","_id":"hubot-creators@0.0.2","scripts":{},"_shasum":"85af29f6b96dfba712e56f9c9928a1f3e49902ce","_from":".","_npmVersion":"3.3.6","_nodeVersion":"5.0.0","_npmUser":{"name":"rcaferati","email":"rafael@caferati.me"},"dist":{"shasum":"85af29f6b96dfba712e56f9c9928a1f3e49902ce","tarball":"https://registry.npmjs.org/hubot-creators/-/hubot-creators-0.0.2.tgz"},"maintainers":[{"name":"rcaferati","email":"rafael@caferati.me"}],"directories":{}},"0.0.8":{"name":"hubot-creators","version":"0.0.8","author":{"name":"Creators","url":"http://creators.co/"},"contributors":[{"name":"Rafael Caferati","email":"rafael@caferati.me"}],"description":"Hubot Creators Adapter","keywords":["hubot","adapter","chat"],"licenses":[{"type":"MIT","url":"http://opensource.org/licenses/mit-license.php"}],"repository":{"type":"git","url":"https://github.com/rcaferati/hubot-creators.git"},"devDependencies":{"coffee-script":"~1.7.1"},"main":"./src/rocketchat","dependencies":{"asteroid":"git://github.com/RocketChat/asteroid.git","parent-require":"^1.0.0","q":"^1.4.1","lru-cache":"~4.0.0"},"gitHead":"2b13d057ebe92607588e63fde9c50b14cd901d6f","bugs":{"url":"https://github.com/rcaferati/hubot-creators/issues"},"homepage":"https://github.com/rcaferati/hubot-creators","_id":"hubot-creators@0.0.8","scripts":{},"_shasum":"abd1deeb82f87795bc8960e0ab5c8ddb38b52adc","_from":".","_npmVersion":"3.3.6","_nodeVersion":"5.0.0","_npmUser":{"name":"rcaferati","email":"rafael@caferati.me"},"dist":{"shasum":"abd1deeb82f87795bc8960e0ab5c8ddb38b52adc","tarball":"https://registry.npmjs.org/hubot-creators/-/hubot-creators-0.0.8.tgz"},"maintainers":[{"name":"rcaferati","email":"rafael@caferati.me"}],"_npmOperationalInternal":{"host":"packages-9-west.internal.npmjs.com","tmp":"tmp/hubot-creators-0.0.8.tgz_1456590539357_0.15896301344037056"},"directories":{}}},"readme":"![Rocket.Chat logo](https://rocket.chat/images/logo/logo-dark.svg?v3)\n\n[![Test Coverage](https://codeclimate.com/github/RocketChat/hubot-rocketchat/badges/coverage.svg)](https://codeclimate.com/github/RocketChat/hubot-rocketchat/coverage)\n[![Code Climate](https://codeclimate.com/github/RocketChat/hubot-rocketchat/badges/gpa.svg)](https://codeclimate.com/github/RocketChat/hubot-rocketchat)\n[![MIT License](http://img.shields.io/badge/license-MIT-blue.svg?style=flat)](https://github.com/RocketChat/Rocket.Chat/raw/master/LICENSE)\n\n# hubot-rocketchat\n\nHubot adapter for Rocket.Chat!\n\n#### NOTE\nIf you want to integrate Rocket.Chat with GitHub or GitLab.  Make sure you visit the [Rocket.Chat.Ops](https://github.com/RocketChat/Rocket.Chat.Ops) project before starting. We already have many scripts that add webhook events and access GitHub/GitLab APIs. You can easily extend these scripts for your custom application.\n\n## Getting your bot connected to Rocket.Chat\n\nHere is a sample run:\n\n![picture of a sample interaction with rocketbot](https://raw.githubusercontent.com/Sing-Li/bbug/master/images/botpic.png)\n\nWe have a couple of ways for you to get up and started with the Rocket.Chat adapter.\n\n### Docker\n\nYou can quickly spin up a docker image with:\n\n```\ndocker run -it -e ROCKETCHAT_URL=<your rocketchat instance>:<port> \\\n\t-e ROCKETCHAT_ROOM=GENERAL \\\n\t-e ROCKETCHAT_USER=bot \\\n\t-e ROCKETCHAT_PASSWORD=bot \\\n\t-e BOT_NAME=bot \\\n\t-e EXTERNAL_SCRIPTS=hubot-pugme,hubot-help \\\n\trocketchat/hubot-rocketchat\n```\n\n#### Custom Scripts\n\nIf you want to include your own custom scripts you can by doing:\n\n```\ndocker run -it -e ROCKETCHAT_URL=<your rocketchat instance>:<port> \\\n\t-e ROCKETCHAT_ROOM=GENERAL \\\n\t-e ROCKETCHAT_USER=bot \\\n\t-e ROCKETCHAT_PASSWORD=bot \\\n\t-e BOT_NAME=bot \\\n\t-e EXTERNAL_SCRIPTS=hubot-pugme,hubot-help \\\n\t-v $PWD/scripts:/home/hubot/scripts \\\n\trocketchat/hubot-rocketchat\n```\n\n\n### Add adapter to hubot\n\n#### New install\nYou can specify the adapter during setup.\n\nFirst you need to install hubot\n\n```\nnpm install -g yo generator-hubot\n```\n\nThen you need to start the setup of the bot\n\n```\n% mkdir myhubot\n% cd myhubot\n% yo hubot\n```\n\nIt'll ask you a few questions.  One will ask which adapter.  Put: `rocketchat`\n\nAlso be sure to remember the name you specify.  This is what the bot will respond to in Rocket.Chat.\n\nYou will need to tell the adapter where your install is and what login information to use.\n\n```\nexport ROCKETCHAT_ROOM=GENERAL\nexport ROCKETCHAT_USER=bot\nexport ROCKETCHAT_PASSWORD=bot\n```\n\nThen start with: `bin/hubot -a rocketchat`\n\n[More Info Here](https://hubot.github.com/docs/)\n\n#### Existing install\nIf you already have hubot setup you can add the adapter.\n\nBy doing: `npm install hubot-rocketchat`\n\nYou will need to tell the adapter where your install is and what login information to use.\n\n```\nexport ROCKETCHAT_ROOM=GENERAL\nexport ROCKETCHAT_USER=bot\nexport ROCKETCHAT_PASSWORD=bot\n```\n\nThen starting your bot specifying the adapter: `bin/hubot -a rocketchat`\n\n#### Configuration Options\n\nHere are all of the options you can specify to configure the bot.\n\nOn Docker you use: `-e VAR=Value`\n\nRegular hubot via: `export VAR=Value` or add to pm2 etc\n\nEnvironment Variable | Description\n:---- | :----\nROCKETCHAT_URL | the IP and port where Rocket.Chat is running\nROCKETCHAT_USER | the bot user's name\nROCKETCHAT_PASSWORD | the bot user's password\nROCKETCHAT_ROOM | the channel/channels names the bot should listen to message from.  This can be comma separated list.\nLISTEN_ON_ALL_PUBLIC | if 'true' then bot will listen and respond to messages from all public channels, as well as respond to direct messages. Default to 'false'. ROCKETCHAT_ROOM should be set to nothing (with `ROCKETCHAT_ROOM=` ) when using `LISTEN_ON_ALL_PUBLIC`.\nRESPOND_TO_DM | if 'true' then bot will listen and respond to direct messages. When setting the option to 'true', be sure to also set ROCKETCHAT_ROOM. This option needs not be set if you are including LISTEN_ON_ALL_PUBLIC.    Default is 'false'.\nBOT_NAME | ** Name of the bot.  This is what it responds to\nEXTERNAL_SCRIPTS | ** These are the npm modules it will add to hubot.\nDEV | ** This enables development mode.\n\n** - Docker image only.\n\n\n### Verify your bot is working\nTry:\n```\nrocketbot ping\n```\n\nAnd:\n```\nrocketbot help\n```\nThe example bot under `scripts` directory respeonds to:\n```\nrocketbot report status\n```\n\n## Developers\n\nWe like to make development as easy on ourselves as possible.  So passing the love on to you!\n\n### Adapter Development\nWe'd love to have your help improving this adapter. PR's very welcome :smile:\n\n#### Docker\n\nFirst clone the source and then move into the directory.\n\n```\ngit clone git@github.com:RocketChat/hubot-rocketchat.git\ncd hubot-rocketchat\n```\n\nNow we start the docker container.\n\n```\ndocker run -it -e ROCKETCHAT_URL=<your rocketchat instance>:<port> \\\n\t-e ROCKETCHAT_ROOM=GENERAL \\\n\t-e ROCKETCHAT_USER=bot \\\n\t-e ROCKETCHAT_PASSWORD=bot \\\n\t-e BOT_NAME=bot \\\n\t-e EXTERNAL_SCRIPTS=hubot-pugme,hubot-help \\\n\t-e DEV=true \\\n\t-v $PWD:/home/hubot/node_modules/hubot-rocketchat rocketchat/hubot-rocketchat\n```\n\n#### Standard\n\nInstalled in hubot you'd hop over into `node_modules`.\n\nDelete the hubot-rocketchat folder.\n\nThen clone the git repo.\n\n```\ngit clone git@github.com:RocketChat/hubot-rocketchat.git\ncd hubot-rocketchat\nnpm install\n```\n\n#### Additional details\nLook under the `scripts` directory, you will find a very basic bot there.\n\nJust add your own script in the directory to have it loaded.  If you are new to hubot script writing, find out more [here](https://hubot.github.com/docs/scripting/).\n\nIf you find a bug or compatibility problem, please open an issue.\n\nIf you have any enhancements or feature requests, create an issue.  If you like what you see, please star the repo.\n\nFinally, if you have created a bot that other users may find useful, please contribute it.\n\n\n#### Some important notes\n\n* The first time you run the docker container, the image needs to be pulled from the public docker registry and it will take some time.  Subsequent runs are super fast.\n* If you are not running Linux (i.e. if you are on a Mac or PC), you cannot use $PWD to mount the volumes.  Instead, [read this note here](https://docs.docker.com/userguide/dockervolumes/) (the 2nd note on the page: *If you are using Boot2Docker...*) to determine the absolute path where you must place the git-cloned directory.\n\n### CONTRIBUTORS WANTED\n\nWhile it is functional, the current adapter is very basic.  We need all the help we can get to add capabilities.\n\nBecome part of the project, just pick an issue and file a PR.\n\nThe adapter code is under the `src` directory.   To test modified adapter code, exit (ctrl-c) the container and run it again.\n\n\n### FAQ\n\nQ:  I am not trying to stage a denial of service attack, why would I ever want to write a bot?\n\nA:  There are many positive and productive use cases for bots.    Imagine a customer service support chat.   As soon as a customer enters the support channel, a bot immediately identifies the customer and then:\n* fetches recent sales information from the sales dept server\n* fetches personal information from the customer data base\n* fetches latest notes made by her/his salesperson from the CRM system\n* scans the customer's facebook and twitter posts\n* obtains details of the last support ticket for this customer\n\nPutting it altogether and then private message the service rep with the information.\n\nAnother use-case is a load test bot, imagine a bot that accepts the command:\n\n````\nrocketbot loadtest europe 25, asia 50, usa 100, canada 10\n````\nThis command specifies a distribution of test bot instances, to be created across globally located data centers.\n\nOnce received, the bot:\n* parses the distribution\n* concurrently ssh to remote Kubernetes controllers and spawns the specified number of test bot instances to start the load test\n\nQ:   The architecture of hubot-rocketchat looks interesting, can you tell me more about it?\n\nA:  Sure, it is based on hubot-meteorchat.  hubot-meteorchat is the hubot integration project for Meteor based chats and real-time messaging systems.  Its driver based architecture simplifies creation and cusotmization of adapter for new systems. For example, the hubot-rocketchat integration is just hubot-meteorchat + rocketchat driver.\n\nLearn more about hubot-meteorchat and other available drivers [at this link](https://github.com/Sing-Li/hubot-meteorchat).\n","maintainers":[{"name":"rcaferati","email":"rafael@caferati.me"}],"time":{"modified":"2016-02-27T16:29:02.294Z","created":"2016-01-12T23:38:46.386Z","0.0.1":"2016-01-12T23:38:46.386Z","0.0.2":"2016-01-19T18:08:01.325Z","0.0.8":"2016-02-27T16:29:02.294Z"},"homepage":"https://github.com/rcaferati/hubot-creators","keywords":["hubot","adapter","chat"],"repository":{"type":"git","url":"https://github.com/rcaferati/hubot-creators.git"},"contributors":[{"name":"Rafael Caferati","email":"rafael@caferati.me"}],"author":{"name":"Creators","url":"http://creators.co/"},"bugs":{"url":"https://github.com/rcaferati/hubot-creators/issues"},"readmeFilename":"README.md","users":{"gabriel.engel":true},"_attachments":{}}