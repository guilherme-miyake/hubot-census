{"_id":"hubot-synapse","_rev":"2-42e44e58fc4d5c4ebb6689cf1f3596f0","name":"hubot-synapse","description":"Uses redis pub-sub to allow Hubot to incorporate scripts written in other languages.","dist-tags":{"latest":"0.1.1"},"versions":{"0.1.0":{"name":"hubot-synapse","version":"0.1.0","description":"Uses redis pub-sub to allow Hubot to incorporate scripts written in other languages.","author":{"name":"Andrew Guenther"},"license":"MIT","repository":{"type":"git","url":"https://github.com/Gustave/hubot-synapse.git"},"keywords":["hubot","hubot-scripts","gustave","synapse"],"dependencies":{"coffee-script":"^1.8","redis":"^0.8.4","hubot":"^2.8.1"},"main":"index.coffee","gitHead":"5d328b6ae4463d6f3c08a13752e918b870f89dec","bugs":{"url":"https://github.com/Gustave/hubot-synapse/issues"},"_id":"hubot-synapse@0.1.0","scripts":{},"_shasum":"89f0e71bb95313b48758b7542a2f0bf017801d96","_from":".","_npmVersion":"1.4.21","_npmUser":{"name":"andrewguenther","email":"guenther.andrew.j@gmail.com"},"maintainers":[{"name":"andrewguenther","email":"guenther.andrew.j@gmail.com"}],"dist":{"shasum":"89f0e71bb95313b48758b7542a2f0bf017801d96","tarball":"https://registry.npmjs.org/hubot-synapse/-/hubot-synapse-0.1.0.tgz"},"directories":{}},"0.1.1":{"name":"hubot-synapse","version":"0.1.1","description":"Uses redis pub-sub to allow Hubot to incorporate scripts written in other languages.","author":{"name":"Andrew Guenther"},"license":"MIT","repository":{"type":"git","url":"https://github.com/Gustave/hubot-synapse.git"},"keywords":["hubot","hubot-scripts","gustave","synapse"],"dependencies":{"coffee-script":"^1.8","redis":"^0.8.4","hubot":"^2.8.1"},"main":"index.coffee","gitHead":"ac8efca742e69af082f9c959317d9dbce11ad5b0","bugs":{"url":"https://github.com/Gustave/hubot-synapse/issues"},"_id":"hubot-synapse@0.1.1","scripts":{},"_shasum":"5c84b01b722469f8f120c89882162ddb62656376","_from":".","_npmVersion":"1.4.21","_npmUser":{"name":"andrewguenther","email":"guenther.andrew.j@gmail.com"},"maintainers":[{"name":"andrewguenther","email":"guenther.andrew.j@gmail.com"}],"dist":{"shasum":"5c84b01b722469f8f120c89882162ddb62656376","tarball":"https://registry.npmjs.org/hubot-synapse/-/hubot-synapse-0.1.1.tgz"},"directories":{}}},"readme":"# Synapse\nUse Redis pub-sub to allow Hubot to incorporate scripts written in other\nlanguages.\n\n## Installing\n\n```\nnpm install hubot-synapse\n```\n\nAnd add `hubot-synapse` to you Hubot's `external-scripts.json` file\n\n```javascript\n// external-scripts.json\n\n['hubot-synapse']\n```\n\n## Why?\nSometimes, you may not want to write your Hubot scripts in Coffeescript. Or\nmaybe, you want to have a simple way to communicate with your Hubot from a\nremote machine. Maybe you want to give everyone in your office the ability\nto quickly hack and iterate on their own scripts running on their own\ndesktops all the while your Hubot goes about its business blissfully unaware.\n\nWhatever your use case, Synapse is for you.\n\n## How?\nGlad you asked. Synapse uses the pub/sub functionality of the same Redis\ninstance that you're likely running as your Hubot persistence layer.\nTwo for one! Everybody wins!\n\nSynapse is actually incredibly simple, you could probably write\nand test your own version in a few hours, but I'll save you some work. If you\nfind my work to be subpar, feel free to leave an issue or submit a pull\nrequest. Thanks champ.\n\nHere's the docs.\n\n### Receiving Messages\nMessages sent out to channels of the form: `<prefix>:in:<operation>`.\n\nHere, the prefix is either the name of the Hubot instance, or specified after\nthe `/` in a Redis URL (ex: `redis://<host>:<port>[/<channel_prefix>]`).\nThis is largely the same logic that the `redis-brain.coffee` script uses. The \noperation field is whatever Hubot listener the channel is attached to.\n\nThe currently supported operations are:\n* `hear`\n* `respond`\n* `enter`\n* `leave`\n* `topic`\n* `catchAll`\n\nIncoming messages will be JSON of the form:\n```javascript\n{\n   \"user\": <message.user.id>,\n   \"room\": <message.room>,\n   \"message\": <message.text>\n}\n```\n\n### Sending Messages\nMessages can be sent to the Hubot on any channel of the form:\n`<prefix>:out:<operation>`\n\nPrefix follows the same rules as above. `<operation>` here represents whichever\nfunction on the `Adapter` you wish to be called. If that function does not\nexist, Hubot will log an error.\n\nOutgoing messages are read from the channel as JSON. The expected form is\nidentical to the incoming form.\n\n## That's it?\n\n\"What is my purpose?\"\n\nTo pass messages.\n\n![To pass butter.](http://i.imgur.com/IxC2SCj.gif)\n","maintainers":[{"name":"andrewguenther","email":"guenther.andrew.j@gmail.com"}],"time":{"modified":"2015-08-01T01:59:40.773Z","created":"2015-07-29T05:26:10.880Z","0.1.0":"2015-07-29T05:26:10.880Z","0.1.1":"2015-08-01T01:59:40.773Z"},"keywords":["hubot","hubot-scripts","gustave","synapse"],"repository":{"type":"git","url":"https://github.com/Gustave/hubot-synapse.git"},"author":{"name":"Andrew Guenther"},"bugs":{"url":"https://github.com/Gustave/hubot-synapse/issues"},"license":"MIT","readmeFilename":"README.md","_attachments":{}}